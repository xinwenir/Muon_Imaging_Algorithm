digraph "Inversion" {

splines  = ortho;
fontname = "Inconsolata";

node [colorscheme = ylgnbu4];
edge [colorscheme = dark28, dir = both];

"DataManage.DataManager"                              [shape = record, label = "{ DataManage.DataManager |  A : \l  _ij : \l  _d_err : \l  obs_tool : \l  d_tool : \l  _bounds : \l  _g_values : \l  air_j_tool : \l  refs_tool : \l  bonds_tool : \l  _refs : \l  _d_value : \l  _g_ij : \l  _unneed_j : \l  _beta_chooser : \l  mesh : \l  _A_others : \l  _instance : \l  _A_others : \l  _unneed_j : \l  _beta_chooser : \l  _misfit_refs_smooth : \l  _beta_misfit_norms : \l  _g_values : \l  _ij : \l  _d_value : \l  _d_err : \l  _bounds : \l  _refs : \l| get_instance() : \l  __init__(self) : \l  Make_A(self) : \l  get_unneed_j(self) : \l  record_data_detail(self) : \l  choose_beta(self) : \l  Postprocessor(self, x) : \l  collect_misfit_refs_smooth(self, all, misfit, refs_x, smooth) : \l  collect_beta_misfit_norms(self, beta, misfit, norm) : \l  _output_res_data_process(self, res) : \l  _Visible_res(self, x) : \l  _Visible_computer_process(self) : \l  _show_beta_history(self) : \l  _get_g_values(self) : \l  _get_ij(self) : \l  _get_d_values(self) : \l  _get_d_err(self) : \l  _get_bounds(self) : \l  _get_refs(self) : \l }"];
"DataTools.Air_j.Air_j"                               [shape = record, label = "{ DataTools.Air_j.Air_j |  un_need_j : \l| get_air_j_to_file(self, mesh: MeshTools, topo_file, unneed_j_file, strategy) : \l  get_air_j_to_file_Jxyzfile_cache(self, mesh: MeshTools, topo_file, unneed_j_file, jxyz_file, strategy) : \l  get_air_j(self, xyzcells, step_x, step_y, step_z, topo_file,
                  jxyz=r"E:\vscode\Muon_Imaging_Algorithm\dataTools\data\jxyz",
                  un_need_file=r"E:\vscode\Muon_Imaging_Algorithm\dataTools\data\unneed_j") : \l  get_air_j_from_file(self, unneed_j=r"E:\vscode\Muon_Imaging_Algorithm\dataTools\data\unneed_j") : \l  recover_resfile_by_airj(self, file_res, air_j=None, default_value=0) : \l  recover_resj_by_airj(self, res, air_j=None, default=-0.1234) : \l }"];
"DataTools.Assist_j_tool.Assist_j_tool"               [shape = record, label = "{ DataTools.Assist_j_tool.Assist_j_tool |  make_assist_j_file(cls,shape,path) : \l }"];
"DataTools.Bonds_tools.Bonds_tool"                    [shape = record, label = "{ DataTools.Bonds_tools.Bonds_tool |  __data : \l| __init__(self, boods_file_path,
                 bound_min_value=None, bound_max_value=None) : \l  get_bonds_min_max(self) : \l  get_bonds_min(self) : \l  get_bonds_max(self) : \l  show_min(self, res_file) : \l  show_max(self, res_file) : \l }"];
"DataTools.Bonds_tools.Make_Bounds_Tools"             [shape = record, label = "{ DataTools.Bonds_tools.Make_Bounds_Tools |  shape : \l  airj : \l| __init__(self,airj,shape) : \l  save_bounds(self,path,air_bound,wall_bound,inner_bound) : \l }"];
"DataTools.ByterChooser.ByterChooser"                 [shape = record, label = "{ DataTools.ByterChooser.ByterChooser |  beta_coefficient : \l  dobs : \l  beta_max : \l  beta_min : \l  beta : \l  derr : \l  _count : \l  _get_beta_by_X2_count : \l| __init__(self, dobs, derr, beta, beta_coefficient) : \l  _calculate(self, dpred) : \l  get_beta(self, pred=None, obsd=None) : \l  _get_beta_by_X2(self, pred, obsd) : \l  _get_beta_by_L(self, pred, obsd) : \l }"];
"DataTools.Gij_tools.G_Data"                          [shape = record, label = "{ DataTools.Gij_tools.G_Data |  _ij : \l  _GV : \l| __init__(self,fileG,file_ij) : \l  get_ij(self) : \l  get_GV(self) : \l  get_G_csc_G(self,shape) : \l  get_GArray(self,shape) : \l }"];
"DataTools.Jxyz_Tools.Make_jxyz"                      [shape = record, label = "{ DataTools.Jxyz_Tools.Make_jxyz |  jxyz_form_shape(self, shape, jxyz_file) : \l }"];
"DataTools.MeshTools.MeshTools"                       [shape = record, label = "{ DataTools.MeshTools.MeshTools |  _cell_zs : \l  _shape : \l  _x_end_values : \l  _y_end_values : \l  _cell_ys : \l  _cell_xs : \l  end_z : \l  _z_start_values : \l  Start_x : \l  _z_end_values : \l  _y_start_values : \l  _x_start_values : \l  Start_y : \l  _x_start_values : \l  _x_end_values : \l  _y_start_values : \l  _y_end_values : \l  _z_start_values : \l  _z_end_values : \l  _strategy_set : \l| __init__(self, mesh_file) : \l  get_shape(self) : \l  cells_count(self) : \l  get_xs(self) : \l  x_start_values(self) : \l  x_end_values(self) : \l  y_start_values(self) : \l  y_end_values(self) : \l  z_start_values(self) : \l  z_end_values(self) : \l  get_ys(self) : \l  get_zs(self) : \l  get_xyz_start(self) : \l  get_xyz_end(self) : \l  get_coordinates_form_xyz(self, x, y, z, strategy=(0, 0, 0)) : \l  discretize_Physical_coordinates_x(self, x) : \l  discretize_Physical_coordinates_y(self, y) : \l  discretize_Physical_coordinates_z(self, z) : \l  discretize_Physical_coordinates(self, x, y, z, detailed=False) : \l }"];
"DataTools.Visibility_res_tools.Beta_log"             [shape = record, label = "{ DataTools.Visibility_res_tools.Beta_log |  file_path : \l  file : \l| __init__(self, file_path) : \l  record(self, beta, misfit, norm) : \l  show_L(self) : \l  show_similarL(self) : \l  show_Beta_search(self) : \l  show(self) : \l }"];
"DataTools.Visibility_res_tools.Norm_tools"           [shape = record, label = "{ DataTools.Visibility_res_tools.Norm_tools |  data : \l| __init__(self, all_misfit_ms_smooth_file=None, all_misfit_ms_smooth_list=None) : \l  store_res(self, file) : \l  show_norm(self) : \l }"];
"DataTools.Visibility_res_tools.Show_pred_obsd_derr"  [shape = record, label = "{ DataTools.Visibility_res_tools.Show_pred_obsd_derr |  data : \l| __init__(self, pred_obsd_derr_file=None, data=None) : \l  store_res(self, file) : \l  show_pred_obsd(self) : \l  show_pred_obsd_diff(self, interval=0.04, max_ignore=5) : \l  show_pred_obs_obsderr(self) : \l }"];
"DataTools.d_tools.d_tools"                           [shape = record, label = "{ DataTools.d_tools.d_tools |  _data : \l  _data_err : \l| __init__(self, file) : \l  get_d(self) : \l  get_d_err(self) : \l  get_d_err_range(self) : \l }"];
"DataTools.new_res_tools.Merge_res"                   [shape = record, label = "{ DataTools.new_res_tools.Merge_res |  __init__(self) : \l  Merge_res_from_file(self,res_file1,res_file2) : \l }"];
"DataTools.new_res_tools.new_res_tools"               [shape = record, label = "{ DataTools.new_res_tools.new_res_tools |  data : \l| __init__(self, res_list=None, res_file=None) : \l  mode0(self, target_file) : \l  mode1(self, min, max, ignore_value, target_file=r"E:\vscode\Muon_Imaging_Algorithm\dataTools\data\new_mode1") : \l  mode2(self, ignore_value, need_min_value=0.00001, target_file=r"E:\vscode\Muon_Imaging_Algorithm\dataTools\data\new_mode2") : \l  smooth_cells(self, cells_ref_res, cell_refs, air_js, oldj, shape,bounds) : \l  _get_all_neighbor_node_values(self, data, shape, oldjs, xyz,j,threshold_value,coefficient=(1,1,1,1,1,1)) : \l  _get_neighbor_node_value(self, shape, default_j, oldjs, xyz) : \l }"];
"DataTools.obs_tools.obs_tools"                       [shape = record, label = "{ DataTools.obs_tools.obs_tools |  _data : \l  _file : \l| __init__(self, file) : \l  make_d_from_obs(self, d_file) : \l  get_obs_id_count(self) : \l  get_data(self) : \l  shape(self) : \l  get_d_form_obs(self) : \l  get_d_absolute_err_form_obs(self) : \l  get_d_relative_error_form_obs(self) : \l  get_receiver_list(self) : \l }"];
"DataTools.ref_tools.Make_refcence_tools"             [shape = record, label = "{ DataTools.ref_tools.Make_refcence_tools |  shape : \l  airj : \l| __init__(self,airj,shape) : \l  save_refs(self,path,air_value,wall_value,inner_value) : \l }"];
"DataTools.ref_tools.Ref_tools"                       [shape = record, label = "{ DataTools.ref_tools.Ref_tools |  data : \l| __init__(self, path) : \l  get_data(self) : \l  recover_resj_by_refj(self, res, refs=None) : \l  make_refs_ps_err_list(self, refs, res) : \l  make_refs_ps_err_file(self, refs_file, ps, out_file) : \l }"];
"DataTools.res_tools.res_tools"                       [shape = record, label = "{ DataTools.res_tools.res_tools |  __init__(self) : \l  Conversion_2(self, shape=(14, 21, 7), file_res=r"E:\vscode\Muon_Imaging_Algorithm\dataTools\data\res",
                     file_xyz=r"E:\vscode\Muon_Imaging_Algorithm\dataTools\data\jxyz",
                     file_out=r"E:\vscode\Muon_Imaging_Algorithm\dataTools\data\new") : \l }"];
"DataTools.show_ray_trace_tools.show_ray_trace_tools" [shape = record, label = "{ DataTools.show_ray_trace_tools.show_ray_trace_tools |  jxyz_file : \l  data : \l  shape : \l| __init__(self, shape) : \l  mark_ray(self, ids: list, show=None, group_method: list = None, id_values: dict = None,
                 file_ij=Setting.Setting.get_instance().get_G_file(),
                 file_res=r"E:\vscode\Muon_Imaging_Algorithm\dataTools\data\ray_trace") : \l  mark_ray_all(self, file_ij,
                     file_res=r"E:\vscode\Muon_Imaging_Algorithm\dataTools\data\ray_trace") : \l  find_ray_by_cells(self, ids, show=None, file_ij=r"E:\vscode\Muon_Imaging_Algorithm\dataTools\data\ij") : \l  get_j_from_scope(self, corners, xcmin, ycmin, zcmin, x_step, y_step, z_step,
                         jxyz_file=r'D:\Projects\fortran\python\dead\jxyz', show=None) : \l  draw_points(self, cells: set, res_file, jxyz_file) : \l }"];
"DataTools.topo_tools.topo_tools"                     [shape = record, label = "{ DataTools.topo_tools.topo_tools |  _data : \l  _file : \l  _x_cache : \l  __point_cache_x : \l  cache_count : \l| __init__(self, file) : \l  init_x_cache(self) : \l  get_x_range(self, x, y, loose=1) : \l  check_point(self, x, y, z) : \l  check_point_cache(self, x, y, z, cache=True) : \l  get_cache_count(self) : \l }"];
"Setting.Setting"                                     [shape = record, label = "{ Setting.Setting |  Setting._Sys_setting : \l  Setting._Tools_setting : \l| _sys_setting : \l  _beta : \l  _tools_setting : \l  _log : \l  _instance : \l  _init : \l  configuration_path : \l  f : \l  config : \l  Inversion_procedure_config : \l  _log_model_dic : \l  _solver_meth : \l  STP_dic : \l  _parameter : \l  _beta : \l  _alpha_s : \l  _alpha_x : \l  _alpha_y : \l  _alpha_z : \l  _all_input : \l  _obs_file : \l  _bnd_file : \l  _refs_file : \l  _mesh_file : \l  _topo_file : \l  _sparse_matrix_file : \l  _Output_file : \l  _res_file : \l  _res_refs_file : \l  _log_config : \l  _golable_log_file : \l  _local_log_path : \l  _log_model : \l  _Temp_file : \l  _all_new : \l  _jxyz_file : \l  _need_jxyz_file : \l  _Assist_j_file : \l  _G_file : \l  _d_file : \l  _air_j_file : \l  _Solve : \l  _solve_model : \l  _max_iter : \l  _max_time : \l  _rm_unable_ray : \l  _rm_air_cells : \l  _rm_unray_cells : \l  _rm_unable_cells : \l  _show_detailed : \l  _Other_setting : \l  _show_res_picture : \l  _store_res_picture : \l  _res_recover_refs : \l  _res_recover_air : \l  _air_value : \l  _sys_setting : \l  _tools_setting : \l| get_instance() : \l  set_beta(self, beta) : \l  get_loger(self) : \l  get_beta(self) : \l  get_alpha(self) : \l  get_rm_unable_ray(self) : \l  get_rm_unable_cells(self) : \l  get_rm_unray_cells(self) : \l  get_rm_air_cells(self) : \l  get_max_time(self) : \l  __init__(self, *args, **kwargs) : \l  record_env_detailed(self) : \l  get_solve_method(self) : \l  get_air_value(self) : \l  get_obs_file(self) : \l  get_bnd_file(self) : \l  get_refs_file(self) : \l  get_mesh_file(self) : \l  get_topo_file(self) : \l  get_sparse_matrix_file(self) : \l  get_res_file(self) : \l  get_res_refs_file(self) : \l  get_jxyz_file(self) : \l  get_G_file(self) : \l  get_d_file(self) : \l  get_air_j_file(self) : \l  get_max_iter(self) : \l  get_show_detailed(self) : \l  get_res_recover_refs(self) : \l  get_res_recover_air(self) : \l  get_all_new(self) : \l  get_need_jxyz_file(self) : \l  Assist_j_file(self) : \l  sys_setting(self) : \l  tools_setting(self) : \l }"];
"Tools.MyTools.myPrint.Loger_Print"                   [shape = record, label = "{ Tools.MyTools.myPrint.Loger_Print |  loger : \l  printer : \l| __init__(self, loger, printer) : \l  write(self, txt, loger=None, printer=None) : \l  flush(self) : \l  close(self) : \l }"];
"Tools.tools.Points_In_Coners_Tools"                  [shape = record, label = "{ Tools.tools.Points_In_Coners_Tools |  ABC1 : \l  p1 : \l  p2 : \l  ABC6 : \l  ABC4 : \l  ABC5 : \l  ABC2 : \l  ABC3 : \l| __init__(self,coners:list) : \l  is_in(self,points) : \l }"];
object                                                [shape = record, label = "{ object |  __doc__ : \l  __dict__ : \l  __slots__ : \l  __module__ : \l  __annotations__ : \l| __class__(self: _T) : \l  __class__(self, __type: Type[object]) : \l  __init__(self) : \l  __new__(cls: Type[_T]) : \l  __setattr__(self, name: str, value: Any) : \l  __eq__(self, o: object) : \l  __ne__(self, o: object) : \l  __str__(self) : \l  __repr__(self) : \l  __hash__(self) : \l  __format__(self, format_spec: str) : \l  __getattribute__(self, name: str) : \l  __delattr__(self, name: str) : \l  __sizeof__(self) : \l  __reduce__(self) : \l  __reduce_ex__(self, protocol: SupportsIndex) : \l  __reduce_ex__(self, protocol: int) : \l  __dir__(self) : \l  __init_subclass__(cls) : \l }"];
"solver.Solver.Solver"                                [shape = record, label = "{ solver.Solver.Solver |  Solver.STP : \l| all_time : \l| __init__(self) : \l  show_env() : \l  run(self, beta=None, def_x=None) : \l  show_state(self) : \l  save_res(self) : \l  reset(self) : \l  close(self) : \l }"];
"typing.Hashable"                                     [shape = record, label = "{ typing.Hashable |  __hash__(self) : \l }"];

"DataManage.DataManager"                              -> object                                                [color = "#595959", style = solid , arrowtail = normal  , arrowhead = none    , taillabel = "", label = "", headlabel = ""];
"DataTools.Air_j.Air_j"                               -> object                                                [color = "#595959", style = solid , arrowtail = normal  , arrowhead = none    , taillabel = "", label = "", headlabel = ""];
"DataTools.Assist_j_tool.Assist_j_tool"               -> object                                                [color = "#595959", style = solid , arrowtail = normal  , arrowhead = none    , taillabel = "", label = "", headlabel = ""];
"DataTools.Bonds_tools.Bonds_tool"                    -> object                                                [color = "#595959", style = solid , arrowtail = normal  , arrowhead = none    , taillabel = "", label = "", headlabel = ""];
"DataTools.Bonds_tools.Make_Bounds_Tools"             -> object                                                [color = "#595959", style = solid , arrowtail = normal  , arrowhead = none    , taillabel = "", label = "", headlabel = ""];
"DataTools.ByterChooser.ByterChooser"                 -> object                                                [color = "#595959", style = solid , arrowtail = normal  , arrowhead = none    , taillabel = "", label = "", headlabel = ""];
"DataTools.Gij_tools.G_Data"                          -> object                                                [color = "#595959", style = solid , arrowtail = normal  , arrowhead = none    , taillabel = "", label = "", headlabel = ""];
"DataTools.Jxyz_Tools.Make_jxyz"                      -> object                                                [color = "#595959", style = solid , arrowtail = normal  , arrowhead = none    , taillabel = "", label = "", headlabel = ""];
"DataTools.MeshTools.MeshTools"                       -> object                                                [color = "#595959", style = solid , arrowtail = normal  , arrowhead = none    , taillabel = "", label = "", headlabel = ""];
"DataTools.Visibility_res_tools.Beta_log"             -> object                                                [color = "#595959", style = solid , arrowtail = normal  , arrowhead = none    , taillabel = "", label = "", headlabel = ""];
"DataTools.Visibility_res_tools.Norm_tools"           -> object                                                [color = "#595959", style = solid , arrowtail = normal  , arrowhead = none    , taillabel = "", label = "", headlabel = ""];
"DataTools.Visibility_res_tools.Show_pred_obsd_derr"  -> object                                                [color = "#595959", style = solid , arrowtail = normal  , arrowhead = none    , taillabel = "", label = "", headlabel = ""];
"DataTools.d_tools.d_tools"                           -> object                                                [color = "#595959", style = solid , arrowtail = normal  , arrowhead = none    , taillabel = "", label = "", headlabel = ""];
"DataTools.new_res_tools.Merge_res"                   -> object                                                [color = "#595959", style = solid , arrowtail = normal  , arrowhead = none    , taillabel = "", label = "", headlabel = ""];
"DataTools.new_res_tools.new_res_tools"               -> object                                                [color = "#595959", style = solid , arrowtail = normal  , arrowhead = none    , taillabel = "", label = "", headlabel = ""];
"DataTools.obs_tools.obs_tools"                       -> object                                                [color = "#595959", style = solid , arrowtail = normal  , arrowhead = none    , taillabel = "", label = "", headlabel = ""];
"DataTools.ref_tools.Make_refcence_tools"             -> object                                                [color = "#595959", style = solid , arrowtail = normal  , arrowhead = none    , taillabel = "", label = "", headlabel = ""];
"DataTools.ref_tools.Ref_tools"                       -> object                                                [color = "#595959", style = solid , arrowtail = normal  , arrowhead = none    , taillabel = "", label = "", headlabel = ""];
"DataTools.res_tools.res_tools"                       -> object                                                [color = "#595959", style = solid , arrowtail = normal  , arrowhead = none    , taillabel = "", label = "", headlabel = ""];
"DataTools.show_ray_trace_tools.show_ray_trace_tools" -> object                                                [color = "#595959", style = solid , arrowtail = normal  , arrowhead = none    , taillabel = "", label = "", headlabel = ""];
"DataTools.topo_tools.topo_tools"                     -> object                                                [color = "#595959", style = solid , arrowtail = normal  , arrowhead = none    , taillabel = "", label = "", headlabel = ""];
"Setting.Setting"                                     -> object                                                [color = "#595959", style = solid , arrowtail = normal  , arrowhead = none    , taillabel = "", label = "", headlabel = ""];
"Tools.MyTools.myPrint.Loger_Print"                   -> object                                                [color = "#595959", style = solid , arrowtail = normal  , arrowhead = none    , taillabel = "", label = "", headlabel = ""];
"Tools.tools.Points_In_Coners_Tools"                  -> object                                                [color = "#595959", style = solid , arrowtail = normal  , arrowhead = none    , taillabel = "", label = "", headlabel = ""];
object                                                -> "typing.Hashable"                                     [color = "#595959", style = dashed, arrowtail = normal  , arrowhead = none    , taillabel = "", label = "", headlabel = ""];
"solver.Solver.Solver"                                -> object                                                [color = "#595959", style = solid , arrowtail = normal  , arrowhead = none    , taillabel = "", label = "", headlabel = ""];

}
