{
    "sourceFile": "Shell_Tools/online_remote_shell/client_starter.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 48,
            "patches": [
                {
                    "date": 1697270970953,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1697271031694,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n import time\r\n \r\n import cowsay\r\n \r\n-from Socket_Tools.sockets import SocketClient, EXIT, Sever_Message_start, send_message, Sever_Message_confirm, recver_message, \\\r\n+from  Socket_Tools.sockets import SocketClient, EXIT, Sever_Message_start, send_message, Sever_Message_confirm, recver_message, \\\r\n     Sever_Message_end, recv_blog\r\n from myPrint import *\r\n \r\n \r\n"
                },
                {
                    "date": 1697271059168,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n import time\r\n \r\n import cowsay\r\n \r\n-from  Socket_Tools.sockets import SocketClient, EXIT, Sever_Message_start, send_message, Sever_Message_confirm, recver_message, \\\r\n+from MyTools. Socket_Tools.sockets import SocketClient, EXIT, Sever_Message_start, send_message, Sever_Message_confirm, recver_message, \\\r\n     Sever_Message_end, recv_blog\r\n from myPrint import *\r\n \r\n \r\n"
                },
                {
                    "date": 1697271113627,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n # datetime:2022/6/22 10:08\r\n import os\r\n import sys\r\n BASE_DIR = os.path.dirname(__file__)\r\n-for i in range(3):###距离项目根目录的距离____终端使用\r\n+for i in range(4):###距离项目根目录的距离____终端使用\r\n     BASE_DIR=os.path.dirname(BASE_DIR)\r\n sys.path.append(BASE_DIR)\r\n \r\n #接后续代码\r\n@@ -12,9 +12,9 @@\n import time\r\n \r\n import cowsay\r\n \r\n-from MyTools. Socket_Tools.sockets import SocketClient, EXIT, Sever_Message_start, send_message, Sever_Message_confirm, recver_message, \\\r\n+from Socket_Tools.sockets import SocketClient, EXIT, Sever_Message_start, send_message, Sever_Message_confirm, recver_message, \\\r\n     Sever_Message_end, recv_blog\r\n from myPrint import *\r\n \r\n \r\n"
                },
                {
                    "date": 1697271266498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,19 +1,19 @@\n # author:高金磊\r\n # datetime:2022/6/22 10:08\r\n import os\r\n import sys\r\n-BASE_DIR = os.path.dirname(__file__)\r\n-for i in range(4):###距离项目根目录的距离____终端使用\r\n-    BASE_DIR=os.path.dirname(BASE_DIR)\r\n-sys.path.append(BASE_DIR)\r\n+# BASE_DIR = os.path.dirname(__file__)\r\n+# for i in range(4):###距离项目根目录的距离____终端使用\r\n+#     BASE_DIR=os.path.dirname(BASE_DIR)\r\n+# sys.path.append(BASE_DIR)\r\n \r\n #接后续代码\r\n \r\n import time\r\n \r\n import cowsay\r\n-\r\n+import Socket_Tools\r\n from Socket_Tools.sockets import SocketClient, EXIT, Sever_Message_start, send_message, Sever_Message_confirm, recver_message, \\\r\n     Sever_Message_end, recv_blog\r\n from myPrint import *\r\n \r\n"
                },
                {
                    "date": 1697271310817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,89 @@\n+# author:高金磊\r\n+# datetime:2022/6/22 10:08\r\n+import os\r\n+import sys\r\n+BASE_DIR = os.path.dirname(__file__)\r\n+for i in range(3):###距离项目根目录的距离____终端使用\r\n+    BASE_DIR=os.path.dirname(BASE_DIR)\r\n+sys.path.append(BASE_DIR)\r\n+myPrint_Wran(BASE_DIR)\r\n+#接后续代码\r\n+\r\n+import time\r\n+\r\n+import cowsay\r\n+from Socket_Tools.sockets import SocketClient, EXIT, Sever_Message_start, send_message, Sever_Message_confirm, recver_message, \\\r\n+    Sever_Message_end, recv_blog\r\n+from myPrint import *\r\n+\r\n+\r\n+def _run( socket):\r\n+    animation=0.02\r\n+    animation_multiple=1\r\n+    cowsay_fun=cowsay.dragon\r\n+    while 1:\r\n+        command = input('gjl:\\>：')\r\n+        if command == \"exit\":\r\n+            socket.send(EXIT.encode())\r\n+            socket.close()\r\n+            break\r\n+        elif command == \"setting show\":\r\n+            animation_multiple=input(\"请输入客户端动画效果（0--10）：\")\r\n+            try:\r\n+                if int(animation_multiple)>=0 and int(animation_multiple)<=10:\r\n+                    myPrint_Success(\"设置已经生效\")\r\n+                    animation_multiple = int(animation_multiple)\r\n+            except Exception:\r\n+                myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n+                animation_multiple=1\r\n+            continue\r\n+        elif command==\"setting cowsay\":\r\n+            list_fun=[[i,cowsay.chars[i]] for i in cowsay.chars.keys()]\r\n+            list_fun.append([\"紫色打印\",myPrint_Hint])\r\n+            while 1:\r\n+                char,char_func=list_fun[0]\r\n+                char_func(f'Hi! I am {char}')\r\n+                middle=input(\"使用这个输入y，查看下一个输入n,查看上一个输入u,退出用E:  \")\r\n+                if middle=='y':\r\n+                    cowsay_fun=char_func\r\n+                    cowsay_fun(\"设置成功\")\r\n+                    break\r\n+                elif middle=='n':\r\n+                    list_fun.append(list_fun.pop(0))\r\n+                elif middle=='u':\r\n+                    list_fun.insert(0,list_fun.pop(-1))\r\n+                elif middle=='E':\r\n+                    break\r\n+\r\n+        try:\r\n+            socket.send(command.encode())\r\n+        except Exception as e:\r\n+            if str(e).endswith(\"远程主机强迫关闭了一个现有的连接。\"):\r\n+                #重连机制\r\n+                SocketClient().connect(_run)\r\n+                return\r\n+\r\n+        while 1:\r\n+            data = socket.recv(1024).decode('utf-8','ignore')\r\n+            if data == \"\":\r\n+                time.sleep(0.5)\r\n+                continue\r\n+\r\n+            if data == Sever_Message_start:\r\n+                data = recv_blog(socket)\r\n+            if cowsay_fun==myPrint_Hint or command=='-h' or command=='who':\r\n+                for i in data.split('\\n'):\r\n+                    if animation_multiple>0:\r\n+                        time.sleep(animation_multiple*animation)\r\n+                    myPrint_Hint(i)\r\n+            else:\r\n+                txt=data\r\n+\r\n+                try:\r\n+                    cowsay_fun(txt)\r\n+                except Exception:\r\n+                    pass\r\n+            break\r\n+if __name__ == '__main__':\r\n+\r\n+    SocketClient().connect(_run)\r\n"
                },
                {
                    "date": 1697271334716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,90 @@\n+# author:高金磊\r\n+# datetime:2022/6/22 10:08\r\n+import os\r\n+import sys\r\n+BASE_DIR = os.path.dirname(__file__)\r\n+for i in range(3):###距离项目根目录的距离____终端使用\r\n+    BASE_DIR=os.path.dirname(BASE_DIR)\r\n+sys.path.append(BASE_DIR)\r\n+from myPrint import myPrint_Wran\r\n+myPrint_Wran(BASE_DIR)\r\n+#接后续代码\r\n+\r\n+import time\r\n+\r\n+import cowsay\r\n+from Socket_Tools.sockets import SocketClient, EXIT, Sever_Message_start, send_message, Sever_Message_confirm, recver_message, \\\r\n+    Sever_Message_end, recv_blog\r\n+from myPrint import *\r\n+\r\n+\r\n+def _run( socket):\r\n+    animation=0.02\r\n+    animation_multiple=1\r\n+    cowsay_fun=cowsay.dragon\r\n+    while 1:\r\n+        command = input('gjl:\\>：')\r\n+        if command == \"exit\":\r\n+            socket.send(EXIT.encode())\r\n+            socket.close()\r\n+            break\r\n+        elif command == \"setting show\":\r\n+            animation_multiple=input(\"请输入客户端动画效果（0--10）：\")\r\n+            try:\r\n+                if int(animation_multiple)>=0 and int(animation_multiple)<=10:\r\n+                    myPrint_Success(\"设置已经生效\")\r\n+                    animation_multiple = int(animation_multiple)\r\n+            except Exception:\r\n+                myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n+                animation_multiple=1\r\n+            continue\r\n+        elif command==\"setting cowsay\":\r\n+            list_fun=[[i,cowsay.chars[i]] for i in cowsay.chars.keys()]\r\n+            list_fun.append([\"紫色打印\",myPrint_Hint])\r\n+            while 1:\r\n+                char,char_func=list_fun[0]\r\n+                char_func(f'Hi! I am {char}')\r\n+                middle=input(\"使用这个输入y，查看下一个输入n,查看上一个输入u,退出用E:  \")\r\n+                if middle=='y':\r\n+                    cowsay_fun=char_func\r\n+                    cowsay_fun(\"设置成功\")\r\n+                    break\r\n+                elif middle=='n':\r\n+                    list_fun.append(list_fun.pop(0))\r\n+                elif middle=='u':\r\n+                    list_fun.insert(0,list_fun.pop(-1))\r\n+                elif middle=='E':\r\n+                    break\r\n+\r\n+        try:\r\n+            socket.send(command.encode())\r\n+        except Exception as e:\r\n+            if str(e).endswith(\"远程主机强迫关闭了一个现有的连接。\"):\r\n+                #重连机制\r\n+                SocketClient().connect(_run)\r\n+                return\r\n+\r\n+        while 1:\r\n+            data = socket.recv(1024).decode('utf-8','ignore')\r\n+            if data == \"\":\r\n+                time.sleep(0.5)\r\n+                continue\r\n+\r\n+            if data == Sever_Message_start:\r\n+                data = recv_blog(socket)\r\n+            if cowsay_fun==myPrint_Hint or command=='-h' or command=='who':\r\n+                for i in data.split('\\n'):\r\n+                    if animation_multiple>0:\r\n+                        time.sleep(animation_multiple*animation)\r\n+                    myPrint_Hint(i)\r\n+            else:\r\n+                txt=data\r\n+\r\n+                try:\r\n+                    cowsay_fun(txt)\r\n+                except Exception:\r\n+                    pass\r\n+            break\r\n+if __name__ == '__main__':\r\n+\r\n+    SocketClient().connect(_run)\r\n"
                },
                {
                    "date": 1697271372494,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n BASE_DIR = os.path.dirname(__file__)\r\n for i in range(3):###距离项目根目录的距离____终端使用\r\n     BASE_DIR=os.path.dirname(BASE_DIR)\r\n sys.path.append(BASE_DIR)\r\n+print(BASE_DIR)\r\n from myPrint import myPrint_Wran\r\n myPrint_Wran(BASE_DIR)\r\n #接后续代码\r\n \r\n"
                },
                {
                    "date": 1697271395066,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,99 +6,9 @@\n for i in range(3):###距离项目根目录的距离____终端使用\r\n     BASE_DIR=os.path.dirname(BASE_DIR)\r\n sys.path.append(BASE_DIR)\r\n print(BASE_DIR)\r\n-from myPrint import myPrint_Wran\r\n-myPrint_Wran(BASE_DIR)\r\n-#接后续代码\r\n \r\n-import time\r\n-\r\n-import cowsay\r\n-from Socket_Tools.sockets import SocketClient, EXIT, Sever_Message_start, send_message, Sever_Message_confirm, recver_message, \\\r\n-    Sever_Message_end, recv_blog\r\n-from myPrint import *\r\n-\r\n-\r\n-def _run( socket):\r\n-    animation=0.02\r\n-    animation_multiple=1\r\n-    cowsay_fun=cowsay.dragon\r\n-    while 1:\r\n-        command = input('gjl:\\>：')\r\n-        if command == \"exit\":\r\n-            socket.send(EXIT.encode())\r\n-            socket.close()\r\n-            break\r\n-        elif command == \"setting show\":\r\n-            animation_multiple=input(\"请输入客户端动画效果（0--10）：\")\r\n-            try:\r\n-                if int(animation_multiple)>=0 and int(animation_multiple)<=10:\r\n-                    myPrint_Success(\"设置已经生效\")\r\n-                    animation_multiple = int(animation_multiple)\r\n-            except Exception:\r\n-                myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n-                animation_multiple=1\r\n-            continue\r\n-        elif command==\"setting cowsay\":\r\n-            list_fun=[[i,cowsay.chars[i]] for i in cowsay.chars.keys()]\r\n-            list_fun.append([\"紫色打印\",myPrint_Hint])\r\n-            while 1:\r\n-                char,char_func=list_fun[0]\r\n-                char_func(f'Hi! I am {char}')\r\n-                middle=input(\"使用这个输入y，查看下一个输入n,查看上一个输入u,退出用E:  \")\r\n-                if middle=='y':\r\n-                    cowsay_fun=char_func\r\n-                    cowsay_fun(\"设置成功\")\r\n-                    break\r\n-                elif middle=='n':\r\n-                    list_fun.append(list_fun.pop(0))\r\n-                elif middle=='u':\r\n-                    list_fun.insert(0,list_fun.pop(-1))\r\n-                elif middle=='E':\r\n-                    break\r\n-\r\n-        try:\r\n-            socket.send(command.encode())\r\n-        except Exception as e:\r\n-            if str(e).endswith(\"远程主机强迫关闭了一个现有的连接。\"):\r\n-                #重连机制\r\n-                SocketClient().connect(_run)\r\n-                return\r\n-\r\n-        while 1:\r\n-            data = socket.recv(1024).decode('utf-8','ignore')\r\n-            if data == \"\":\r\n-                time.sleep(0.5)\r\n-                continue\r\n-\r\n-            if data == Sever_Message_start:\r\n-                data = recv_blog(socket)\r\n-            if cowsay_fun==myPrint_Hint or command=='-h' or command=='who':\r\n-                for i in data.split('\\n'):\r\n-                    if animation_multiple>0:\r\n-                        time.sleep(animation_multiple*animation)\r\n-                    myPrint_Hint(i)\r\n-            else:\r\n-                txt=data\r\n-\r\n-                try:\r\n-                    cowsay_fun(txt)\r\n-                except Exception:\r\n-                    pass\r\n-            break\r\n-if __name__ == '__main__':\r\n-\r\n-    SocketClient().connect(_run)\r\n-# author:高金磊\r\n-# datetime:2022/6/22 10:08\r\n-import os\r\n-import sys\r\n-BASE_DIR = os.path.dirname(__file__)\r\n-for i in range(3):###距离项目根目录的距离____终端使用\r\n-    BASE_DIR=os.path.dirname(BASE_DIR)\r\n-sys.path.append(BASE_DIR)\r\n-myPrint_Wran(BASE_DIR)\r\n #接后续代码\r\n \r\n import time\r\n \r\n@@ -177,94 +87,4 @@\n             break\r\n if __name__ == '__main__':\r\n \r\n     SocketClient().connect(_run)\r\n-# author:高金磊\r\n-# datetime:2022/6/22 10:08\r\n-import os\r\n-import sys\r\n-# BASE_DIR = os.path.dirname(__file__)\r\n-# for i in range(4):###距离项目根目录的距离____终端使用\r\n-#     BASE_DIR=os.path.dirname(BASE_DIR)\r\n-# sys.path.append(BASE_DIR)\r\n-\r\n-#接后续代码\r\n-\r\n-import time\r\n-\r\n-import cowsay\r\n-import Socket_Tools\r\n-from Socket_Tools.sockets import SocketClient, EXIT, Sever_Message_start, send_message, Sever_Message_confirm, recver_message, \\\r\n-    Sever_Message_end, recv_blog\r\n-from myPrint import *\r\n-\r\n-\r\n-def _run( socket):\r\n-    animation=0.02\r\n-    animation_multiple=1\r\n-    cowsay_fun=cowsay.dragon\r\n-    while 1:\r\n-        command = input('gjl:\\>：')\r\n-        if command == \"exit\":\r\n-            socket.send(EXIT.encode())\r\n-            socket.close()\r\n-            break\r\n-        elif command == \"setting show\":\r\n-            animation_multiple=input(\"请输入客户端动画效果（0--10）：\")\r\n-            try:\r\n-                if int(animation_multiple)>=0 and int(animation_multiple)<=10:\r\n-                    myPrint_Success(\"设置已经生效\")\r\n-                    animation_multiple = int(animation_multiple)\r\n-            except Exception:\r\n-                myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n-                animation_multiple=1\r\n-            continue\r\n-        elif command==\"setting cowsay\":\r\n-            list_fun=[[i,cowsay.chars[i]] for i in cowsay.chars.keys()]\r\n-            list_fun.append([\"紫色打印\",myPrint_Hint])\r\n-            while 1:\r\n-                char,char_func=list_fun[0]\r\n-                char_func(f'Hi! I am {char}')\r\n-                middle=input(\"使用这个输入y，查看下一个输入n,查看上一个输入u,退出用E:  \")\r\n-                if middle=='y':\r\n-                    cowsay_fun=char_func\r\n-                    cowsay_fun(\"设置成功\")\r\n-                    break\r\n-                elif middle=='n':\r\n-                    list_fun.append(list_fun.pop(0))\r\n-                elif middle=='u':\r\n-                    list_fun.insert(0,list_fun.pop(-1))\r\n-                elif middle=='E':\r\n-                    break\r\n-\r\n-        try:\r\n-            socket.send(command.encode())\r\n-        except Exception as e:\r\n-            if str(e).endswith(\"远程主机强迫关闭了一个现有的连接。\"):\r\n-                #重连机制\r\n-                SocketClient().connect(_run)\r\n-                return\r\n-\r\n-        while 1:\r\n-            data = socket.recv(1024).decode('utf-8','ignore')\r\n-            if data == \"\":\r\n-                time.sleep(0.5)\r\n-                continue\r\n-\r\n-            if data == Sever_Message_start:\r\n-                data = recv_blog(socket)\r\n-            if cowsay_fun==myPrint_Hint or command=='-h' or command=='who':\r\n-                for i in data.split('\\n'):\r\n-                    if animation_multiple>0:\r\n-                        time.sleep(animation_multiple*animation)\r\n-                    myPrint_Hint(i)\r\n-            else:\r\n-                txt=data\r\n-\r\n-                try:\r\n-                    cowsay_fun(txt)\r\n-                except Exception:\r\n-                    pass\r\n-            break\r\n-if __name__ == '__main__':\r\n-\r\n-    SocketClient().connect(_run)\r\n"
                },
                {
                    "date": 1697271421728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,90 @@\n+# author:高金磊\r\n+# datetime:2022/6/22 10:08\r\n+import os\r\n+import sys\r\n+BASE_DIR = os.path.dirname(__file__)\r\n+for i in range(3):###距离项目根目录的距离____终端使用\r\n+    BASE_DIR=os.path.dirname(BASE_DIR)\r\n+sys.path.append(BASE_DIR)\r\n+print(BASE_DIR)\r\n+\r\n+#接后续代码\r\n+\r\n+import time\r\n+\r\n+import cowsay\r\n+from Socket_Tools.sockets import SocketClient, EXIT, Sever_Message_start, send_message, Sever_Message_confirm, recver_message, \\\r\n+    Sever_Message_end, recv_blog\r\n+from myPrint import *\r\n+\r\n+\r\n+def _run( socket):\r\n+    animation=0.02\r\n+    animation_multiple=1\r\n+    cowsay_fun=cowsay.dragon\r\n+    while 1:\r\n+        command = input('gjl:\\>：')\r\n+        if command == \"exit\":\r\n+            socket.send(EXIT.encode())\r\n+            socket.close()\r\n+            break\r\n+        elif command == \"setting show\":\r\n+            animation_multiple=input(\"请输入客户端动画效果（0--10）：\")\r\n+            try:\r\n+                if int(animation_multiple)>=0 and int(animation_multiple)<=10:\r\n+                    myPrint_Success(\"设置已经生效\")\r\n+                    animation_multiple = int(animation_multiple)\r\n+            except Exception:\r\n+                myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n+                animation_multiple=1\r\n+            continue\r\n+        elif command==\"setting cowsay\":\r\n+            list_fun=[[i,cowsay.chars[i]] for i in cowsay.chars.keys()]\r\n+            list_fun.append([\"紫色打印\",myPrint_Hint])\r\n+            while 1:\r\n+                char,char_func=list_fun[0]\r\n+                char_func(f'Hi! I am {char}')\r\n+                middle=input(\"使用这个输入y，查看下一个输入n,查看上一个输入u,退出用E:  \")\r\n+                if middle=='y':\r\n+                    cowsay_fun=char_func\r\n+                    cowsay_fun(\"设置成功\")\r\n+                    break\r\n+                elif middle=='n':\r\n+                    list_fun.append(list_fun.pop(0))\r\n+                elif middle=='u':\r\n+                    list_fun.insert(0,list_fun.pop(-1))\r\n+                elif middle=='E':\r\n+                    break\r\n+\r\n+        try:\r\n+            socket.send(command.encode())\r\n+        except Exception as e:\r\n+            if str(e).endswith(\"远程主机强迫关闭了一个现有的连接。\"):\r\n+                #重连机制\r\n+                SocketClient().connect(_run)\r\n+                return\r\n+\r\n+        while 1:\r\n+            data = socket.recv(1024).decode('utf-8','ignore')\r\n+            if data == \"\":\r\n+                time.sleep(0.5)\r\n+                continue\r\n+\r\n+            if data == Sever_Message_start:\r\n+                data = recv_blog(socket)\r\n+            if cowsay_fun==myPrint_Hint or command=='-h' or command=='who':\r\n+                for i in data.split('\\n'):\r\n+                    if animation_multiple>0:\r\n+                        time.sleep(animation_multiple*animation)\r\n+                    myPrint_Hint(i)\r\n+            else:\r\n+                txt=data\r\n+\r\n+                try:\r\n+                    cowsay_fun(txt)\r\n+                except Exception:\r\n+                    pass\r\n+            break\r\n+if __name__ == '__main__':\r\n+\r\n+    SocketClient().connect(_run)\r\n"
                },
                {
                    "date": 1697271456056,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,12 +2,12 @@\n # datetime:2022/6/22 10:08\r\n import os\r\n import sys\r\n BASE_DIR = os.path.dirname(__file__)\r\n-for i in range(3):###距离项目根目录的距离____终端使用\r\n+for i in range(2):###距离项目根目录的距离____终端使用\r\n     BASE_DIR=os.path.dirname(BASE_DIR)\r\n-sys.path.append(BASE_DIR)\r\n-print(BASE_DIR)\r\n+    sys.path.append(BASE_DIR)\r\n+    print(BASE_DIR)\r\n \r\n #接后续代码\r\n \r\n import time\r\n@@ -87,94 +87,4 @@\n             break\r\n if __name__ == '__main__':\r\n \r\n     SocketClient().connect(_run)\r\n-# author:高金磊\r\n-# datetime:2022/6/22 10:08\r\n-import os\r\n-import sys\r\n-BASE_DIR = os.path.dirname(__file__)\r\n-for i in range(3):###距离项目根目录的距离____终端使用\r\n-    BASE_DIR=os.path.dirname(BASE_DIR)\r\n-sys.path.append(BASE_DIR)\r\n-print(BASE_DIR)\r\n-\r\n-#接后续代码\r\n-\r\n-import time\r\n-\r\n-import cowsay\r\n-from Socket_Tools.sockets import SocketClient, EXIT, Sever_Message_start, send_message, Sever_Message_confirm, recver_message, \\\r\n-    Sever_Message_end, recv_blog\r\n-from myPrint import *\r\n-\r\n-\r\n-def _run( socket):\r\n-    animation=0.02\r\n-    animation_multiple=1\r\n-    cowsay_fun=cowsay.dragon\r\n-    while 1:\r\n-        command = input('gjl:\\>：')\r\n-        if command == \"exit\":\r\n-            socket.send(EXIT.encode())\r\n-            socket.close()\r\n-            break\r\n-        elif command == \"setting show\":\r\n-            animation_multiple=input(\"请输入客户端动画效果（0--10）：\")\r\n-            try:\r\n-                if int(animation_multiple)>=0 and int(animation_multiple)<=10:\r\n-                    myPrint_Success(\"设置已经生效\")\r\n-                    animation_multiple = int(animation_multiple)\r\n-            except Exception:\r\n-                myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n-                animation_multiple=1\r\n-            continue\r\n-        elif command==\"setting cowsay\":\r\n-            list_fun=[[i,cowsay.chars[i]] for i in cowsay.chars.keys()]\r\n-            list_fun.append([\"紫色打印\",myPrint_Hint])\r\n-            while 1:\r\n-                char,char_func=list_fun[0]\r\n-                char_func(f'Hi! I am {char}')\r\n-                middle=input(\"使用这个输入y，查看下一个输入n,查看上一个输入u,退出用E:  \")\r\n-                if middle=='y':\r\n-                    cowsay_fun=char_func\r\n-                    cowsay_fun(\"设置成功\")\r\n-                    break\r\n-                elif middle=='n':\r\n-                    list_fun.append(list_fun.pop(0))\r\n-                elif middle=='u':\r\n-                    list_fun.insert(0,list_fun.pop(-1))\r\n-                elif middle=='E':\r\n-                    break\r\n-\r\n-        try:\r\n-            socket.send(command.encode())\r\n-        except Exception as e:\r\n-            if str(e).endswith(\"远程主机强迫关闭了一个现有的连接。\"):\r\n-                #重连机制\r\n-                SocketClient().connect(_run)\r\n-                return\r\n-\r\n-        while 1:\r\n-            data = socket.recv(1024).decode('utf-8','ignore')\r\n-            if data == \"\":\r\n-                time.sleep(0.5)\r\n-                continue\r\n-\r\n-            if data == Sever_Message_start:\r\n-                data = recv_blog(socket)\r\n-            if cowsay_fun==myPrint_Hint or command=='-h' or command=='who':\r\n-                for i in data.split('\\n'):\r\n-                    if animation_multiple>0:\r\n-                        time.sleep(animation_multiple*animation)\r\n-                    myPrint_Hint(i)\r\n-            else:\r\n-                txt=data\r\n-\r\n-                try:\r\n-                    cowsay_fun(txt)\r\n-                except Exception:\r\n-                    pass\r\n-            break\r\n-if __name__ == '__main__':\r\n-\r\n-    SocketClient().connect(_run)\r\n"
                },
                {
                    "date": 1697274698706,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n                 myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n                 animation_multiple=1\r\n             continue\r\n         elif command==\"setting cowsay\":\r\n-            list_fun=[[i,cowsay.chars[i]] for i in cowsay.chars.keys()]\r\n+            list_fun=[[i,cowsay.char_names[i]] for i in cowsay.chars.keys()]\r\n             list_fun.append([\"紫色打印\",myPrint_Hint])\r\n             while 1:\r\n                 char,char_func=list_fun[0]\r\n                 char_func(f'Hi! I am {char}')\r\n"
                },
                {
                    "date": 1697274747600,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n                 myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n                 animation_multiple=1\r\n             continue\r\n         elif command==\"setting cowsay\":\r\n-            list_fun=[[i,cowsay.char_names[i]] for i in cowsay.chars.keys()]\r\n+            list_fun=[[i,cowsay.char_names[i]] for i in cowsay.ch_name()]\r\n             list_fun.append([\"紫色打印\",myPrint_Hint])\r\n             while 1:\r\n                 char,char_func=list_fun[0]\r\n                 char_func(f'Hi! I am {char}')\r\n"
                },
                {
                    "date": 1697274780880,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n                 myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n                 animation_multiple=1\r\n             continue\r\n         elif command==\"setting cowsay\":\r\n-            list_fun=[[i,cowsay.char_names[i]] for i in cowsay.ch_name()]\r\n+            list_fun=[[i,cowsay.ch_name[i]] for i in cowsay.char_funcs()]\r\n             list_fun.append([\"紫色打印\",myPrint_Hint])\r\n             while 1:\r\n                 char,char_func=list_fun[0]\r\n                 char_func(f'Hi! I am {char}')\r\n"
                },
                {
                    "date": 1697274934873,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,90 @@\n+# author:高金磊\r\n+# datetime:2022/6/22 10:08\r\n+import os\r\n+import sys\r\n+BASE_DIR = os.path.dirname(__file__)\r\n+for i in range(2):###距离项目根目录的距离____终端使用\r\n+    BASE_DIR=os.path.dirname(BASE_DIR)\r\n+    sys.path.append(BASE_DIR)\r\n+    print(BASE_DIR)\r\n+\r\n+#接后续代码\r\n+\r\n+import time\r\n+\r\n+import cowsay\r\n+from Socket_Tools.sockets import SocketClient, EXIT, Sever_Message_start, send_message, Sever_Message_confirm, recver_message, \\\r\n+    Sever_Message_end, recv_blog\r\n+from myPrint import *\r\n+\r\n+\r\n+def _run( socket):\r\n+    animation=0.02\r\n+    animation_multiple=1\r\n+    cowsay_fun=cowsay.dragon\r\n+    while 1:\r\n+        command = input('gjl:\\>：')\r\n+        if command == \"exit\":\r\n+            socket.send(EXIT.encode())\r\n+            socket.close()\r\n+            break\r\n+        elif command == \"setting show\":\r\n+            animation_multiple=input(\"请输入客户端动画效果（0--10）：\")\r\n+            try:\r\n+                if int(animation_multiple)>=0 and int(animation_multiple)<=10:\r\n+                    myPrint_Success(\"设置已经生效\")\r\n+                    animation_multiple = int(animation_multiple)\r\n+            except Exception:\r\n+                myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n+                animation_multiple=1\r\n+            continue\r\n+        elif command==\"setting cowsay\":\r\n+            list_fun=[[i,cowsay.ch_name[i]] for i in range(len(cowsay.ch_name))]\r\n+            list_fun.append([\"紫色打印\",myPrint_Hint])\r\n+            while 1:\r\n+                char,char_func=list_fun[0]\r\n+                char_func(f'Hi! I am {char}')\r\n+                middle=input(\"使用这个输入y，查看下一个输入n,查看上一个输入u,退出用E:  \")\r\n+                if middle=='y':\r\n+                    cowsay_fun=char_func\r\n+                    cowsay_fun(\"设置成功\")\r\n+                    break\r\n+                elif middle=='n':\r\n+                    list_fun.append(list_fun.pop(0))\r\n+                elif middle=='u':\r\n+                    list_fun.insert(0,list_fun.pop(-1))\r\n+                elif middle=='E':\r\n+                    break\r\n+\r\n+        try:\r\n+            socket.send(command.encode())\r\n+        except Exception as e:\r\n+            if str(e).endswith(\"远程主机强迫关闭了一个现有的连接。\"):\r\n+                #重连机制\r\n+                SocketClient().connect(_run)\r\n+                return\r\n+\r\n+        while 1:\r\n+            data = socket.recv(1024).decode('utf-8','ignore')\r\n+            if data == \"\":\r\n+                time.sleep(0.5)\r\n+                continue\r\n+\r\n+            if data == Sever_Message_start:\r\n+                data = recv_blog(socket)\r\n+            if cowsay_fun==myPrint_Hint or command=='-h' or command=='who':\r\n+                for i in data.split('\\n'):\r\n+                    if animation_multiple>0:\r\n+                        time.sleep(animation_multiple*animation)\r\n+                    myPrint_Hint(i)\r\n+            else:\r\n+                txt=data\r\n+\r\n+                try:\r\n+                    cowsay_fun(txt)\r\n+                except Exception:\r\n+                    pass\r\n+            break\r\n+if __name__ == '__main__':\r\n+\r\n+    SocketClient().connect(_run)\r\n"
                },
                {
                    "date": 1697274970123,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n                 myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n                 animation_multiple=1\r\n             continue\r\n         elif command==\"setting cowsay\":\r\n-            list_fun=[[i,cowsay.ch_name[i]] for i in range(len(cowsay.ch_name))]\r\n+            list_fun=[[i,cowsay.char_names[i]] for i in range(len(cowsay.char_names))]\r\n             list_fun.append([\"紫色打印\",myPrint_Hint])\r\n             while 1:\r\n                 char,char_func=list_fun[0]\r\n                 char_func(f'Hi! I am {char}')\r\n@@ -87,94 +87,4 @@\n             break\r\n if __name__ == '__main__':\r\n \r\n     SocketClient().connect(_run)\r\n-# author:高金磊\r\n-# datetime:2022/6/22 10:08\r\n-import os\r\n-import sys\r\n-BASE_DIR = os.path.dirname(__file__)\r\n-for i in range(2):###距离项目根目录的距离____终端使用\r\n-    BASE_DIR=os.path.dirname(BASE_DIR)\r\n-    sys.path.append(BASE_DIR)\r\n-    print(BASE_DIR)\r\n-\r\n-#接后续代码\r\n-\r\n-import time\r\n-\r\n-import cowsay\r\n-from Socket_Tools.sockets import SocketClient, EXIT, Sever_Message_start, send_message, Sever_Message_confirm, recver_message, \\\r\n-    Sever_Message_end, recv_blog\r\n-from myPrint import *\r\n-\r\n-\r\n-def _run( socket):\r\n-    animation=0.02\r\n-    animation_multiple=1\r\n-    cowsay_fun=cowsay.dragon\r\n-    while 1:\r\n-        command = input('gjl:\\>：')\r\n-        if command == \"exit\":\r\n-            socket.send(EXIT.encode())\r\n-            socket.close()\r\n-            break\r\n-        elif command == \"setting show\":\r\n-            animation_multiple=input(\"请输入客户端动画效果（0--10）：\")\r\n-            try:\r\n-                if int(animation_multiple)>=0 and int(animation_multiple)<=10:\r\n-                    myPrint_Success(\"设置已经生效\")\r\n-                    animation_multiple = int(animation_multiple)\r\n-            except Exception:\r\n-                myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n-                animation_multiple=1\r\n-            continue\r\n-        elif command==\"setting cowsay\":\r\n-            list_fun=[[i,cowsay.ch_name[i]] for i in cowsay.char_funcs()]\r\n-            list_fun.append([\"紫色打印\",myPrint_Hint])\r\n-            while 1:\r\n-                char,char_func=list_fun[0]\r\n-                char_func(f'Hi! I am {char}')\r\n-                middle=input(\"使用这个输入y，查看下一个输入n,查看上一个输入u,退出用E:  \")\r\n-                if middle=='y':\r\n-                    cowsay_fun=char_func\r\n-                    cowsay_fun(\"设置成功\")\r\n-                    break\r\n-                elif middle=='n':\r\n-                    list_fun.append(list_fun.pop(0))\r\n-                elif middle=='u':\r\n-                    list_fun.insert(0,list_fun.pop(-1))\r\n-                elif middle=='E':\r\n-                    break\r\n-\r\n-        try:\r\n-            socket.send(command.encode())\r\n-        except Exception as e:\r\n-            if str(e).endswith(\"远程主机强迫关闭了一个现有的连接。\"):\r\n-                #重连机制\r\n-                SocketClient().connect(_run)\r\n-                return\r\n-\r\n-        while 1:\r\n-            data = socket.recv(1024).decode('utf-8','ignore')\r\n-            if data == \"\":\r\n-                time.sleep(0.5)\r\n-                continue\r\n-\r\n-            if data == Sever_Message_start:\r\n-                data = recv_blog(socket)\r\n-            if cowsay_fun==myPrint_Hint or command=='-h' or command=='who':\r\n-                for i in data.split('\\n'):\r\n-                    if animation_multiple>0:\r\n-                        time.sleep(animation_multiple*animation)\r\n-                    myPrint_Hint(i)\r\n-            else:\r\n-                txt=data\r\n-\r\n-                try:\r\n-                    cowsay_fun(txt)\r\n-                except Exception:\r\n-                    pass\r\n-            break\r\n-if __name__ == '__main__':\r\n-\r\n-    SocketClient().connect(_run)\r\n"
                },
                {
                    "date": 1697275058342,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n                 myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n                 animation_multiple=1\r\n             continue\r\n         elif command==\"setting cowsay\":\r\n-            list_fun=[[i,cowsay.char_names[i]] for i in range(len(cowsay.char_names))]\r\n+            list_fun=[[cowsay.char_names[i],cowsay.char_funcs[i]] for i in range(len(cowsay.char_names))]\r\n             list_fun.append([\"紫色打印\",myPrint_Hint])\r\n             while 1:\r\n                 char,char_func=list_fun[0]\r\n                 char_func(f'Hi! I am {char}')\r\n"
                },
                {
                    "date": 1697275243103,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n                 myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n                 animation_multiple=1\r\n             continue\r\n         elif command==\"setting cowsay\":\r\n-            list_fun=[[cowsay.char_names[i],cowsay.char_funcs[i]] for i in range(len(cowsay.char_names))]\r\n+            list_fun=[[i,cowsay.char_funcs[i]] for i in cowsay.char_funcs.keys()]\r\n             list_fun.append([\"紫色打印\",myPrint_Hint])\r\n             while 1:\r\n                 char,char_func=list_fun[0]\r\n                 char_func(f'Hi! I am {char}')\r\n"
                },
                {
                    "date": 1697275297581,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n                 myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n                 animation_multiple=1\r\n             continue\r\n         elif command==\"setting cowsay\":\r\n-            list_fun=[[i,cowsay.char_funcs[i]] for i in cowsay.char_funcs.keys()]\r\n+            list_fun=[[name,cowsay.char_funcs[name]] for name in cowsay.char_funcs.keys()]\r\n             list_fun.append([\"紫色打印\",myPrint_Hint])\r\n             while 1:\r\n                 char,char_func=list_fun[0]\r\n                 char_func(f'Hi! I am {char}')\r\n"
                },
                {
                    "date": 1697275626048,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,95 @@\n+# author:高金磊\r\n+# datetime:2022/6/22 10:08\r\n+import os\r\n+import sys\r\n+BASE_DIR = os.path.dirname(__file__)\r\n+for i in range(2):###距离项目根目录的距离____终端使用\r\n+    BASE_DIR=os.path.dirname(BASE_DIR)\r\n+    sys.path.append(BASE_DIR)\r\n+    print(BASE_DIR)\r\n+\r\n+#接后续代码\r\n+\r\n+import time\r\n+\r\n+import cowsay\r\n+from Socket_Tools.sockets import SocketClient, EXIT, Sever_Message_start, send_message, Sever_Message_confirm, recver_message, \\\r\n+    Sever_Message_end, recv_blog\r\n+from myPrint import *\r\n+\r\n+\r\n+def _run( socket):\r\n+    animation=0.02\r\n+    animation_multiple=1\r\n+    cowsay_fun=cowsay.dragon\r\n+    while 1:\r\n+        command = input('gjl:\\>：')\r\n+        if command == \"exit\":\r\n+            socket.send(EXIT.encode())\r\n+            socket.close()\r\n+            break\r\n+        elif command == \"setting show\":\r\n+            animation_multiple=input(\"请输入客户端动画效果（0--10）：\")\r\n+            try:\r\n+                if int(animation_multiple)>=0 and int(animation_multiple)<=10:\r\n+                    myPrint_Success(\"设置已经生效\")\r\n+                    animation_multiple = int(animation_multiple)\r\n+            except Exception:\r\n+                myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n+                animation_multiple=1\r\n+            continue\r\n+        elif command==\"setting cowsay\":\r\n+            list_fun=[[name,cowsay.char_funcs[name]] for name in cowsay.char_funcs.keys()]\r\n+            list_fun.append([\"紫色打印\",myPrint_Hint])\r\n+            \r\n+            list_fun_copy=copy(list_fun)\r\n+            while 1:\r\n+                char,char_func=list_fun[0]\r\n+                char_func(f'Hi! I am {char}')\r\n+                middle=input(\"使用这个输入y，查看下一个输入n,查看上一个输入u,退出用E,显示所有用A,或者输入你想使用的编号(0,%s):  \"%(len(list_fun)))\r\n+                if middle=='y':\r\n+                    cowsay_fun=char_func\r\n+                    cowsay_fun(\"设置成功\")\r\n+                    break\r\n+                elif middle=='n':\r\n+                    list_fun.append(list_fun.pop(0))\r\n+                elif middle=='u':\r\n+                    list_fun.insert(0,list_fun.pop(-1))\r\n+                elif middle=='E':\r\n+                    break\r\n+                elif middle=='A' or middle=='a':\r\n+                    for j in range(len(list_fun_copy)):\r\n+                       char,char_func= list_fun_copy[i]\r\n+                       char_func(f'Hi! I am {char},id is {j}')\r\n+        try:\r\n+            socket.send(command.encode())\r\n+        except Exception as e:\r\n+            if str(e).endswith(\"远程主机强迫关闭了一个现有的连接。\"):\r\n+                #重连机制\r\n+                SocketClient().connect(_run)\r\n+                return\r\n+\r\n+        while 1:\r\n+            data = socket.recv(1024).decode('utf-8','ignore')\r\n+            if data == \"\":\r\n+                time.sleep(0.5)\r\n+                continue\r\n+\r\n+            if data == Sever_Message_start:\r\n+                data = recv_blog(socket)\r\n+            if cowsay_fun==myPrint_Hint or command=='-h' or command=='who':\r\n+                for i in data.split('\\n'):\r\n+                    if animation_multiple>0:\r\n+                        time.sleep(animation_multiple*animation)\r\n+                    myPrint_Hint(i)\r\n+            else:\r\n+                txt=data\r\n+\r\n+                try:\r\n+                    cowsay_fun(txt)\r\n+                except Exception:\r\n+                    pass\r\n+            break\r\n+if __name__ == '__main__':\r\n+\r\n+    SocketClient().connect(_run)\r\n"
                },
                {
                    "date": 1697275653651,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n                 elif middle=='E':\r\n                     break\r\n                 elif middle=='A' or middle=='a':\r\n                     for j in range(len(list_fun_copy)):\r\n-                       char,char_func= list_fun_copy[i]\r\n+                       char,char_func= list_fun_copy[j]\r\n                        char_func(f'Hi! I am {char},id is {j}')\r\n         try:\r\n             socket.send(command.encode())\r\n         except Exception as e:\r\n"
                },
                {
                    "date": 1697279603796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,8 +60,9 @@\n                 elif middle=='A' or middle=='a':\r\n                     for j in range(len(list_fun_copy)):\r\n                        char,char_func= list_fun_copy[j]\r\n                        char_func(f'Hi! I am {char},id is {j}')\r\n+                elif \r\n         try:\r\n             socket.send(command.encode())\r\n         except Exception as e:\r\n             if str(e).endswith(\"远程主机强迫关闭了一个现有的连接。\"):\r\n"
                },
                {
                    "date": 1697279864469,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,19 @@\n                 elif middle=='A' or middle=='a':\r\n                     for j in range(len(list_fun_copy)):\r\n                        char,char_func= list_fun_copy[j]\r\n                        char_func(f'Hi! I am {char},id is {j}')\r\n-                elif \r\n+                else:\r\n+                    try:\r\n+                        middle = int(middle)\r\n+                        if(middle<len(list_fun_copy) and middle>=0):\r\n+                            cowsay_fun=list_fun_copy[middle]\r\n+                            cowsay_fun(\"设置成功\")\r\n+                            break\r\n+                        else:\r\n+                            myPrint_Err(\"无效的命令\")\r\n+                    except Exception as e:\r\n+                        pass\r\n         try:\r\n             socket.send(command.encode())\r\n         except Exception as e:\r\n             if str(e).endswith(\"远程主机强迫关闭了一个现有的连接。\"):\r\n"
                },
                {
                    "date": 1697280653212,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,106 @@\n+# author:高金磊\r\n+# datetime:2022/6/22 10:08\r\n+import os\r\n+import sys\r\n+BASE_DIR = os.path.dirname(__file__)\r\n+for i in range(2):###距离项目根目录的距离____终端使用\r\n+    BASE_DIR=os.path.dirname(BASE_DIR)\r\n+    sys.path.append(BASE_DIR)\r\n+    print(BASE_DIR)\r\n+\r\n+#接后续代码\r\n+\r\n+import time\r\n+\r\n+import cowsay\r\n+from Socket_Tools.sockets import SocketClient, EXIT, Sever_Message_start, send_message, Sever_Message_confirm, recver_message, \\\r\n+    Sever_Message_end, recv_blog\r\n+from myPrint import *\r\n+\r\n+\r\n+def _run( socket):\r\n+    animation=0.02\r\n+    animation_multiple=1\r\n+    cowsay_fun=cowsay.dragon\r\n+    while 1:\r\n+        command = input('gjl:\\>：')\r\n+        if command == \"exit\":\r\n+            socket.send(EXIT.encode())\r\n+            socket.close()\r\n+            break\r\n+        elif command == \"setting show\":\r\n+            animation_multiple=input(\"请输入客户端动画效果（0--10）：\")\r\n+            try:\r\n+                if int(animation_multiple)>=0 and int(animation_multiple)<=10:\r\n+                    myPrint_Success(\"设置已经生效\")\r\n+                    animation_multiple = int(animation_multiple)\r\n+            except Exception:\r\n+                myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n+                animation_multiple=1\r\n+            continue\r\n+        elif command==\"setting cowsay\":\r\n+            list_fun=[[name,cowsay.char_funcs[name]] for name in cowsay.char_funcs.keys()]\r\n+            list_fun.append([\"紫色打印\",myPrint_Hint])\r\n+            \r\n+            list_fun_copy=copy(list_fun)\r\n+            while 1:\r\n+                char,char_func=list_fun[0]\r\n+                char_func(f'Hi! I am {char}')\r\n+                middle=input(\"使用这个输入y，查看下一个输入n,查看上一个输入u,退出用E,显示所有用A,或者输入你想使用的编号(0,%s):  \"%(len(list_fun)))\r\n+                if middle=='y':\r\n+                    cowsay_fun=char_func\r\n+                    cowsay_fun(\"设置成功\")\r\n+                    break\r\n+                elif middle=='n':\r\n+                    list_fun.append(list_fun.pop(0))\r\n+                elif middle=='u':\r\n+                    list_fun.insert(0,list_fun.pop(-1))\r\n+                elif middle=='E':\r\n+                    break\r\n+                elif middle=='A' or middle=='a':\r\n+                    for j in range(len(list_fun_copy)):\r\n+                       char,char_func= list_fun_copy[j]\r\n+                       char_func(f'Hi! I am {char},id is {j}')\r\n+                else:\r\n+                    try:\r\n+                        middle = int(middle)\r\n+                        if(middle<len(list_fun_copy) and middle>=0):\r\n+                            cowsay_fun=list_fun_copy[middle]\r\n+                            cowsay_fun(\"设置成功\")\r\n+                            break\r\n+                        else:\r\n+                            myPrint_Err(\"无效的命令\")\r\n+                    except Exception as e:\r\n+                        pass\r\n+        try:\r\n+            socket.send(command.encode())\r\n+        except Exception as e:\r\n+            if str(e).endswith(\"远程主机强迫关闭了一个现有的连接。\"):\r\n+                #重连机制\r\n+                SocketClient().connect(_run)\r\n+                return\r\n+\r\n+        while 1:\r\n+            data = socket.recv(1024).decode('utf-8','ignore')\r\n+            if data == \"\":\r\n+                time.sleep(0.5)\r\n+                continue\r\n+\r\n+            if data == Sever_Message_start:\r\n+                data = recv_blog(socket)\r\n+            if cowsay_fun==myPrint_Hint or command=='-h' or command=='who':\r\n+                for i in data.split('\\n'):\r\n+                    if animation_multiple>0:\r\n+                        time.sleep(animation_multiple*animation)\r\n+                        myPrint_Hint(i)\r\n+            else:\r\n+                txt=data\r\n+\r\n+                try:\r\n+                    cowsay_fun(txt)\r\n+                except Exception:\r\n+                    pass\r\n+            break\r\n+if __name__ == '__main__':\r\n+\r\n+    SocketClient().connect(_run)\r\n"
                },
                {
                    "date": 1697281022527,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,9 @@\n     animation=0.02\r\n     animation_multiple=1\r\n     cowsay_fun=cowsay.dragon\r\n     while 1:\r\n+        \r\n         command = input('gjl:\\>：')\r\n         if command == \"exit\":\r\n             socket.send(EXIT.encode())\r\n             socket.close()\r\n@@ -103,200 +104,4 @@\n             break\r\n if __name__ == '__main__':\r\n \r\n     SocketClient().connect(_run)\r\n-# author:高金磊\r\n-# datetime:2022/6/22 10:08\r\n-import os\r\n-import sys\r\n-BASE_DIR = os.path.dirname(__file__)\r\n-for i in range(2):###距离项目根目录的距离____终端使用\r\n-    BASE_DIR=os.path.dirname(BASE_DIR)\r\n-    sys.path.append(BASE_DIR)\r\n-    print(BASE_DIR)\r\n-\r\n-#接后续代码\r\n-\r\n-import time\r\n-\r\n-import cowsay\r\n-from Socket_Tools.sockets import SocketClient, EXIT, Sever_Message_start, send_message, Sever_Message_confirm, recver_message, \\\r\n-    Sever_Message_end, recv_blog\r\n-from myPrint import *\r\n-\r\n-\r\n-def _run( socket):\r\n-    animation=0.02\r\n-    animation_multiple=1\r\n-    cowsay_fun=cowsay.dragon\r\n-    while 1:\r\n-        command = input('gjl:\\>：')\r\n-        if command == \"exit\":\r\n-            socket.send(EXIT.encode())\r\n-            socket.close()\r\n-            break\r\n-        elif command == \"setting show\":\r\n-            animation_multiple=input(\"请输入客户端动画效果（0--10）：\")\r\n-            try:\r\n-                if int(animation_multiple)>=0 and int(animation_multiple)<=10:\r\n-                    myPrint_Success(\"设置已经生效\")\r\n-                    animation_multiple = int(animation_multiple)\r\n-            except Exception:\r\n-                myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n-                animation_multiple=1\r\n-            continue\r\n-        elif command==\"setting cowsay\":\r\n-            list_fun=[[name,cowsay.char_funcs[name]] for name in cowsay.char_funcs.keys()]\r\n-            list_fun.append([\"紫色打印\",myPrint_Hint])\r\n-            \r\n-            list_fun_copy=copy(list_fun)\r\n-            while 1:\r\n-                char,char_func=list_fun[0]\r\n-                char_func(f'Hi! I am {char}')\r\n-                middle=input(\"使用这个输入y，查看下一个输入n,查看上一个输入u,退出用E,显示所有用A,或者输入你想使用的编号(0,%s):  \"%(len(list_fun)))\r\n-                if middle=='y':\r\n-                    cowsay_fun=char_func\r\n-                    cowsay_fun(\"设置成功\")\r\n-                    break\r\n-                elif middle=='n':\r\n-                    list_fun.append(list_fun.pop(0))\r\n-                elif middle=='u':\r\n-                    list_fun.insert(0,list_fun.pop(-1))\r\n-                elif middle=='E':\r\n-                    break\r\n-                elif middle=='A' or middle=='a':\r\n-                    for j in range(len(list_fun_copy)):\r\n-                       char,char_func= list_fun_copy[j]\r\n-                       char_func(f'Hi! I am {char},id is {j}')\r\n-                else:\r\n-                    try:\r\n-                        middle = int(middle)\r\n-                        if(middle<len(list_fun_copy) and middle>=0):\r\n-                            cowsay_fun=list_fun_copy[middle]\r\n-                            cowsay_fun(\"设置成功\")\r\n-                            break\r\n-                        else:\r\n-                            myPrint_Err(\"无效的命令\")\r\n-                    except Exception as e:\r\n-                        pass\r\n-        try:\r\n-            socket.send(command.encode())\r\n-        except Exception as e:\r\n-            if str(e).endswith(\"远程主机强迫关闭了一个现有的连接。\"):\r\n-                #重连机制\r\n-                SocketClient().connect(_run)\r\n-                return\r\n-\r\n-        while 1:\r\n-            data = socket.recv(1024).decode('utf-8','ignore')\r\n-            if data == \"\":\r\n-                time.sleep(0.5)\r\n-                continue\r\n-\r\n-            if data == Sever_Message_start:\r\n-                data = recv_blog(socket)\r\n-            if cowsay_fun==myPrint_Hint or command=='-h' or command=='who':\r\n-                for i in data.split('\\n'):\r\n-                    if animation_multiple>0:\r\n-                        time.sleep(animation_multiple*animation)\r\n-                    myPrint_Hint(i)\r\n-            else:\r\n-                txt=data\r\n-\r\n-                try:\r\n-                    cowsay_fun(txt)\r\n-                except Exception:\r\n-                    pass\r\n-            break\r\n-if __name__ == '__main__':\r\n-\r\n-    SocketClient().connect(_run)\r\n-# author:高金磊\r\n-# datetime:2022/6/22 10:08\r\n-import os\r\n-import sys\r\n-BASE_DIR = os.path.dirname(__file__)\r\n-for i in range(2):###距离项目根目录的距离____终端使用\r\n-    BASE_DIR=os.path.dirname(BASE_DIR)\r\n-    sys.path.append(BASE_DIR)\r\n-    print(BASE_DIR)\r\n-\r\n-#接后续代码\r\n-\r\n-import time\r\n-\r\n-import cowsay\r\n-from Socket_Tools.sockets import SocketClient, EXIT, Sever_Message_start, send_message, Sever_Message_confirm, recver_message, \\\r\n-    Sever_Message_end, recv_blog\r\n-from myPrint import *\r\n-\r\n-\r\n-def _run( socket):\r\n-    animation=0.02\r\n-    animation_multiple=1\r\n-    cowsay_fun=cowsay.dragon\r\n-    while 1:\r\n-        command = input('gjl:\\>：')\r\n-        if command == \"exit\":\r\n-            socket.send(EXIT.encode())\r\n-            socket.close()\r\n-            break\r\n-        elif command == \"setting show\":\r\n-            animation_multiple=input(\"请输入客户端动画效果（0--10）：\")\r\n-            try:\r\n-                if int(animation_multiple)>=0 and int(animation_multiple)<=10:\r\n-                    myPrint_Success(\"设置已经生效\")\r\n-                    animation_multiple = int(animation_multiple)\r\n-            except Exception:\r\n-                myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n-                animation_multiple=1\r\n-            continue\r\n-        elif command==\"setting cowsay\":\r\n-            list_fun=[[name,cowsay.char_funcs[name]] for name in cowsay.char_funcs.keys()]\r\n-            list_fun.append([\"紫色打印\",myPrint_Hint])\r\n-            while 1:\r\n-                char,char_func=list_fun[0]\r\n-                char_func(f'Hi! I am {char}')\r\n-                middle=input(\"使用这个输入y，查看下一个输入n,查看上一个输入u,退出用E:  \")\r\n-                if middle=='y':\r\n-                    cowsay_fun=char_func\r\n-                    cowsay_fun(\"设置成功\")\r\n-                    break\r\n-                elif middle=='n':\r\n-                    list_fun.append(list_fun.pop(0))\r\n-                elif middle=='u':\r\n-                    list_fun.insert(0,list_fun.pop(-1))\r\n-                elif middle=='E':\r\n-                    break\r\n-\r\n-        try:\r\n-            socket.send(command.encode())\r\n-        except Exception as e:\r\n-            if str(e).endswith(\"远程主机强迫关闭了一个现有的连接。\"):\r\n-                #重连机制\r\n-                SocketClient().connect(_run)\r\n-                return\r\n-\r\n-        while 1:\r\n-            data = socket.recv(1024).decode('utf-8','ignore')\r\n-            if data == \"\":\r\n-                time.sleep(0.5)\r\n-                continue\r\n-\r\n-            if data == Sever_Message_start:\r\n-                data = recv_blog(socket)\r\n-            if cowsay_fun==myPrint_Hint or command=='-h' or command=='who':\r\n-                for i in data.split('\\n'):\r\n-                    if animation_multiple>0:\r\n-                        time.sleep(animation_multiple*animation)\r\n-                    myPrint_Hint(i)\r\n-            else:\r\n-                txt=data\r\n-\r\n-                try:\r\n-                    cowsay_fun(txt)\r\n-                except Exception:\r\n-                    pass\r\n-            break\r\n-if __name__ == '__main__':\r\n-\r\n-    SocketClient().connect(_run)\r\n"
                },
                {
                    "date": 1697281248424,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,8 +28,10 @@\n         if command == \"exit\":\r\n             socket.send(EXIT.encode())\r\n             socket.close()\r\n             break\r\n+        elif command==\"\":\r\n+            break\r\n         elif command == \"setting show\":\r\n             animation_multiple=input(\"请输入客户端动画效果（0--10）：\")\r\n             try:\r\n                 if int(animation_multiple)>=0 and int(animation_multiple)<=10:\r\n"
                },
                {
                    "date": 1697281360567,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n             list_fun_copy=copy(list_fun)\r\n             while 1:\r\n                 char,char_func=list_fun[0]\r\n                 char_func(f'Hi! I am {char}')\r\n-                middle=input(\"使用这个输入y，查看下一个输入n,查看上一个输入u,退出用E,显示所有用A,或者输入你想使用的编号(0,%s):  \"%(len(list_fun)))\r\n+                middle=input(\"使用这个输入y，查看下一个输入n,查看上一个输入u,退出用E,显示所有用A,或者输入你想使用的编号(0,%s):  \"%(len(list_fun)-1))\r\n                 if middle=='y':\r\n                     cowsay_fun=char_func\r\n                     cowsay_fun(\"设置成功\")\r\n                     break\r\n"
                },
                {
                    "date": 1697281548075,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,15 +67,15 @@\n                 else:\r\n                     try:\r\n                         middle = int(middle)\r\n                         if(middle<len(list_fun_copy) and middle>=0):\r\n-                            cowsay_fun=list_fun_copy[middle]\r\n+                            cowsay_fun=list_fun_copy[middle][1]\r\n                             cowsay_fun(\"设置成功\")\r\n                             break\r\n                         else:\r\n                             myPrint_Err(\"无效的命令\")\r\n                     except Exception as e:\r\n-                        pass\r\n+                        myPrint_Err(\"设置失败\")\r\n         try:\r\n             socket.send(command.encode())\r\n         except Exception as e:\r\n             if str(e).endswith(\"远程主机强迫关闭了一个现有的连接。\"):\r\n"
                },
                {
                    "date": 1697281782986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n             socket.send(EXIT.encode())\r\n             socket.close()\r\n             break\r\n         elif command==\"\":\r\n-            break\r\n+            continue\r\n         elif command == \"setting show\":\r\n             animation_multiple=input(\"请输入客户端动画效果（0--10）：\")\r\n             try:\r\n                 if int(animation_multiple)>=0 and int(animation_multiple)<=10:\r\n"
                },
                {
                    "date": 1697285227410,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,109 @@\n+# author:高金磊\r\n+# datetime:2022/6/22 10:08\r\n+import os\r\n+import sys\r\n+BASE_DIR = os.path.dirname(__file__)\r\n+for i in range(2):###距离项目根目录的距离____终端使用\r\n+    BASE_DIR=os.path.dirname(BASE_DIR)\r\n+    sys.path.append(BASE_DIR)\r\n+    print(BASE_DIR)\r\n+\r\n+#接后续代码\r\n+\r\n+import time\r\n+\r\n+import cowsay\r\n+from Socket_Tools.sockets import SocketClient, EXIT, Sever_Message_start, send_message, Sever_Message_confirm, recver_message, \\\r\n+    Sever_Message_end, recv_blog\r\n+from myPrint import *\r\n+\r\n+\r\n+def _run( socket):\r\n+    animation=0.02\r\n+    animation_multiple=1\r\n+    cowsay_fun=cowsay.dragon\r\n+    while 1:\r\n+        \r\n+        command = input('gjl:\\>：')\r\n+        if command == \"exit\":\r\n+            socket.send(EXIT.encode())\r\n+            socket.close()\r\n+            break\r\n+        elif command==\"\":\r\n+            continue\r\n+        elif command == \"setting show\":\r\n+            animation_multiple=input(\"请输入客户端动画效果（0--10）：\")\r\n+            try:\r\n+                if int(animation_multiple)>=0 and int(animation_multiple)<=10:\r\n+                    myPrint_Success(\"设置已经生效\")\r\n+                    animation_multiple = int(animation_multiple)\r\n+            except Exception:\r\n+                myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n+                animation_multiple=1\r\n+            continue\r\n+        elif command==\"setting cowsay\":\r\n+            list_fun=[[name,cowsay.char_funcs[name]] for name in cowsay.char_funcs.keys()]\r\n+            list_fun.append([\"紫色打印\",myPrint_Hint])\r\n+            \r\n+            list_fun_copy=copy(list_fun)\r\n+            while 1:\r\n+                char,char_func=list_fun[0]\r\n+                char_func(f'Hi! I am {char}')\r\n+                middle=input(\"使用这个输入y，查看下一个输入n,查看上一个输入u,退出用E,显示所有用A,或者输入你想使用的编号(0,%s):  \"%(len(list_fun)-1))\r\n+                if middle=='y':\r\n+                    cowsay_fun=char_func\r\n+                    cowsay_fun(\"设置成功\")\r\n+                    break\r\n+                elif middle=='n':\r\n+                    list_fun.append(list_fun.pop(0))\r\n+                elif middle=='u':\r\n+                    list_fun.insert(0,list_fun.pop(-1))\r\n+                elif middle=='E':\r\n+                    break\r\n+                elif middle=='A' or middle=='a':\r\n+                    for j in range(len(list_fun_copy)):\r\n+                       char,char_func= list_fun_copy[j]\r\n+                       char_func(f'Hi! I am {char},id is {j}')\r\n+                else:\r\n+                    try:\r\n+                        middle = int(middle)\r\n+                        if(middle<len(list_fun_copy) and middle>=0):\r\n+                            cowsay_fun=list_fun_copy[middle][1]\r\n+                            cowsay_fun(\"设置成功\")\r\n+                            break\r\n+                        else:\r\n+                            myPrint_Err(\"无效的命令\")\r\n+                    except Exception as e:\r\n+                        myPrint_Err(\"设置失败\")\r\n+        try:\r\n+            socket.send(command.encode())\r\n+        except Exception as e:\r\n+            if str(e).endswith(\"远程主机强迫关闭了一个现有的连接。\"):\r\n+                #重连机制\r\n+                SocketClient().connect(_run)\r\n+                return\r\n+\r\n+        while 1:\r\n+            data = socket.recv(1024).decode('utf-8','ignore')\r\n+            code=0\r\n+            if data == \"\":\r\n+                time.sleep(0.5)\r\n+                continue\r\n+\r\n+            if data == Sever_Message_start:\r\n+                data,code = recv_blog(socket)\r\n+            if cowsay_fun==myPrint_Hint or command=='-h' or command=='who':\r\n+                for i in data.split('\\n'):\r\n+                    if animation_multiple>0:\r\n+                        time.sleep(animation_multiple*animation)\r\n+                        myPrint_Hint(i)\r\n+            else:\r\n+                txt=data\r\n+                try:\r\n+                    cowsay_fun(txt)\r\n+                except Exception:\r\n+                    pass\r\n+            break\r\n+if __name__ == '__main__':\r\n+\r\n+    SocketClient().connect(_run)\r\n"
                },
                {
                    "date": 1697285376169,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,109 @@\n+# author:高金磊\r\n+# datetime:2022/6/22 10:08\r\n+import os\r\n+import sys\r\n+BASE_DIR = os.path.dirname(__file__)\r\n+for i in range(2):###距离项目根目录的距离____终端使用\r\n+    BASE_DIR=os.path.dirname(BASE_DIR)\r\n+    sys.path.append(BASE_DIR)\r\n+    print(BASE_DIR)\r\n+\r\n+#接后续代码\r\n+\r\n+import time\r\n+\r\n+import cowsay\r\n+from Socket_Tools.sockets import SocketClient, EXIT, Sever_Message_start, send_message, Sever_Message_confirm, recver_message, \\\r\n+    Sever_Message_end, recv_blog\r\n+from myPrint import *\r\n+\r\n+\r\n+def _run( socket):\r\n+    animation=0.02\r\n+    animation_multiple=1\r\n+    cowsay_fun=myPrint_Hint\r\n+    while 1:\r\n+        \r\n+        command = input('gjl:\\>：')\r\n+        if command == \"exit\":\r\n+            socket.send(EXIT.encode())\r\n+            socket.close()\r\n+            break\r\n+        elif command==\"\":\r\n+            continue\r\n+        elif command == \"setting show\":\r\n+            animation_multiple=input(\"请输入客户端动画效果（0--10）：\")\r\n+            try:\r\n+                if int(animation_multiple)>=0 and int(animation_multiple)<=10:\r\n+                    myPrint_Success(\"设置已经生效\")\r\n+                    animation_multiple = int(animation_multiple)\r\n+            except Exception:\r\n+                myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n+                animation_multiple=1\r\n+            continue\r\n+        elif command==\"setting cowsay\":\r\n+            list_fun=[[name,cowsay.char_funcs[name]] for name in cowsay.char_funcs.keys()]\r\n+            list_fun.append([\"紫色打印\",myPrint_Hint])\r\n+            \r\n+            list_fun_copy=copy(list_fun)\r\n+            while 1:\r\n+                char,char_func=list_fun[0]\r\n+                char_func(f'Hi! I am {char}')\r\n+                middle=input(\"使用这个输入y，查看下一个输入n,查看上一个输入u,退出用E,显示所有用A,或者输入你想使用的编号(0,%s):  \"%(len(list_fun)-1))\r\n+                if middle=='y':\r\n+                    cowsay_fun=char_func\r\n+                    cowsay_fun(\"设置成功\")\r\n+                    break\r\n+                elif middle=='n':\r\n+                    list_fun.append(list_fun.pop(0))\r\n+                elif middle=='u':\r\n+                    list_fun.insert(0,list_fun.pop(-1))\r\n+                elif middle=='E':\r\n+                    break\r\n+                elif middle=='A' or middle=='a':\r\n+                    for j in range(len(list_fun_copy)):\r\n+                       char,char_func= list_fun_copy[j]\r\n+                       char_func(f'Hi! I am {char},id is {j}')\r\n+                else:\r\n+                    try:\r\n+                        middle = int(middle)\r\n+                        if(middle<len(list_fun_copy) and middle>=0):\r\n+                            cowsay_fun=list_fun_copy[middle][1]\r\n+                            cowsay_fun(\"设置成功\")\r\n+                            break\r\n+                        else:\r\n+                            myPrint_Err(\"无效的命令\")\r\n+                    except Exception as e:\r\n+                        myPrint_Err(\"设置失败\")\r\n+        try:\r\n+            socket.send(command.encode())\r\n+        except Exception as e:\r\n+            if str(e).endswith(\"远程主机强迫关闭了一个现有的连接。\"):\r\n+                #重连机制\r\n+                SocketClient().connect(_run)\r\n+                return\r\n+\r\n+        while 1:\r\n+            data = socket.recv(1024).decode('utf-8','ignore')\r\n+            code=0\r\n+            if data == \"\":\r\n+                time.sleep(0.5)\r\n+                continue\r\n+\r\n+            if data == Sever_Message_start:\r\n+                data,code = recv_blog(socket)\r\n+            if cowsay_fun==myPrint_Hint or command=='-h' or command=='who':\r\n+                for i in data.split('\\n'):\r\n+                    if animation_multiple>0:\r\n+                        time.sleep(animation_multiple*animation)\r\n+                        myPrint_Hint(i)\r\n+            else:\r\n+                txt=data\r\n+                try:\r\n+                    cowsay_fun(txt)\r\n+                except Exception:\r\n+                    pass\r\n+            break\r\n+if __name__ == '__main__':\r\n+\r\n+    SocketClient().connect(_run)\r\n"
                },
                {
                    "date": 1697285451756,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,111 @@\n+# author:高金磊\r\n+# datetime:2022/6/22 10:08\r\n+import os\r\n+import sys\r\n+BASE_DIR = os.path.dirname(__file__)\r\n+for i in range(2):###距离项目根目录的距离____终端使用\r\n+    BASE_DIR=os.path.dirname(BASE_DIR)\r\n+    sys.path.append(BASE_DIR)\r\n+    print(BASE_DIR)\r\n+\r\n+#接后续代码\r\n+\r\n+import time\r\n+\r\n+import cowsay\r\n+from Socket_Tools.sockets import SocketClient, EXIT, Sever_Message_start, send_message, Sever_Message_confirm, recver_message, \\\r\n+    Sever_Message_end, recv_blog\r\n+from myPrint import *\r\n+\r\n+\r\n+def _run( socket):\r\n+    animation=0.02\r\n+    animation_multiple=1\r\n+    cowsay_fun=myPrint_Hint\r\n+    while 1:\r\n+        \r\n+        command = input('gjl:\\>：')\r\n+        if command == \"exit\":\r\n+            socket.send(EXIT.encode())\r\n+            socket.close()\r\n+            break\r\n+        elif command==\"\":\r\n+            continue\r\n+        elif command == \"setting show\":\r\n+            animation_multiple=input(\"请输入客户端动画效果（0--10）：\")\r\n+            try:\r\n+                if int(animation_multiple)>=0 and int(animation_multiple)<=10:\r\n+                    myPrint_Success(\"设置已经生效\")\r\n+                    animation_multiple = int(animation_multiple)\r\n+            except Exception:\r\n+                myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n+                animation_multiple=1\r\n+            continue\r\n+        elif command==\"setting cowsay\":\r\n+            list_fun=[[name,cowsay.char_funcs[name]] for name in cowsay.char_funcs.keys()]\r\n+            list_fun.append([\"紫色打印\",myPrint_Hint])\r\n+            \r\n+            list_fun_copy=copy(list_fun)\r\n+            while 1:\r\n+                char,char_func=list_fun[0]\r\n+                char_func(f'Hi! I am {char}')\r\n+                middle=input(\"使用这个输入y，查看下一个输入n,查看上一个输入u,退出用E,显示所有用A,或者输入你想使用的编号(0,%s):  \"%(len(list_fun)-1))\r\n+                if middle=='y':\r\n+                    cowsay_fun=char_func\r\n+                    cowsay_fun(\"设置成功\")\r\n+                    break\r\n+                elif middle=='n':\r\n+                    list_fun.append(list_fun.pop(0))\r\n+                elif middle=='u':\r\n+                    list_fun.insert(0,list_fun.pop(-1))\r\n+                elif middle=='E':\r\n+                    break\r\n+                elif middle=='A' or middle=='a':\r\n+                    for j in range(len(list_fun_copy)):\r\n+                       char,char_func= list_fun_copy[j]\r\n+                       char_func(f'Hi! I am {char},id is {j}')\r\n+                else:\r\n+                    try:\r\n+                        middle = int(middle)\r\n+                        if(middle<len(list_fun_copy) and middle>=0):\r\n+                            cowsay_fun=list_fun_copy[middle][1]\r\n+                            cowsay_fun(\"设置成功\")\r\n+                            break\r\n+                        else:\r\n+                            myPrint_Err(\"无效的命令\")\r\n+                    except Exception as e:\r\n+                        myPrint_Err(\"设置失败\")\r\n+        try:\r\n+            socket.send(command.encode())\r\n+        except Exception as e:\r\n+            if str(e).endswith(\"远程主机强迫关闭了一个现有的连接。\"):\r\n+                #重连机制\r\n+                SocketClient().connect(_run)\r\n+                return\r\n+\r\n+        while 1:\r\n+            data = socket.recv(1024).decode('utf-8','ignore')\r\n+            code=0\r\n+            if data == \"\":\r\n+                time.sleep(0.5)\r\n+                continue\r\n+\r\n+            if data == Sever_Message_start:\r\n+                data,code = recv_blog(socket)\r\n+                if code !=0:\r\n+                    myPrint_Err(\"执行失败\")\r\n+            if cowsay_fun==myPrint_Hint or command=='-h' or command=='who':\r\n+                for i in data.split('\\n'):\r\n+                    if animation_multiple>0:\r\n+                        time.sleep(animation_multiple*animation)\r\n+                        myPrint_Hint(i)\r\n+            else:\r\n+                txt=data\r\n+                try:\r\n+                    cowsay_fun(txt)\r\n+                except Exception:\r\n+                    pass\r\n+            break\r\n+if __name__ == '__main__':\r\n+\r\n+    SocketClient().connect(_run)\r\n"
                },
                {
                    "date": 1697380150297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n \r\n import time\r\n \r\n import cowsay\r\n-from Socket_Tools.sockets import SocketClient, EXIT, Sever_Message_start, send_message, Sever_Message_confirm, recver_message, \\\r\n+from Shell_Tools.online_remote_shell.sockets import SocketClient, EXIT, Sever_Message_start, send_message, Sever_Message_confirm, recver_message, \\\r\n     Sever_Message_end, recv_blog\r\n from myPrint import *\r\n \r\n \r\n@@ -108,331 +108,4 @@\n             break\r\n if __name__ == '__main__':\r\n \r\n     SocketClient().connect(_run)\r\n-# author:高金磊\r\n-# datetime:2022/6/22 10:08\r\n-import os\r\n-import sys\r\n-BASE_DIR = os.path.dirname(__file__)\r\n-for i in range(2):###距离项目根目录的距离____终端使用\r\n-    BASE_DIR=os.path.dirname(BASE_DIR)\r\n-    sys.path.append(BASE_DIR)\r\n-    print(BASE_DIR)\r\n-\r\n-#接后续代码\r\n-\r\n-import time\r\n-\r\n-import cowsay\r\n-from Socket_Tools.sockets import SocketClient, EXIT, Sever_Message_start, send_message, Sever_Message_confirm, recver_message, \\\r\n-    Sever_Message_end, recv_blog\r\n-from myPrint import *\r\n-\r\n-\r\n-def _run( socket):\r\n-    animation=0.02\r\n-    animation_multiple=1\r\n-    cowsay_fun=myPrint_Hint\r\n-    while 1:\r\n-        \r\n-        command = input('gjl:\\>：')\r\n-        if command == \"exit\":\r\n-            socket.send(EXIT.encode())\r\n-            socket.close()\r\n-            break\r\n-        elif command==\"\":\r\n-            continue\r\n-        elif command == \"setting show\":\r\n-            animation_multiple=input(\"请输入客户端动画效果（0--10）：\")\r\n-            try:\r\n-                if int(animation_multiple)>=0 and int(animation_multiple)<=10:\r\n-                    myPrint_Success(\"设置已经生效\")\r\n-                    animation_multiple = int(animation_multiple)\r\n-            except Exception:\r\n-                myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n-                animation_multiple=1\r\n-            continue\r\n-        elif command==\"setting cowsay\":\r\n-            list_fun=[[name,cowsay.char_funcs[name]] for name in cowsay.char_funcs.keys()]\r\n-            list_fun.append([\"紫色打印\",myPrint_Hint])\r\n-            \r\n-            list_fun_copy=copy(list_fun)\r\n-            while 1:\r\n-                char,char_func=list_fun[0]\r\n-                char_func(f'Hi! I am {char}')\r\n-                middle=input(\"使用这个输入y，查看下一个输入n,查看上一个输入u,退出用E,显示所有用A,或者输入你想使用的编号(0,%s):  \"%(len(list_fun)-1))\r\n-                if middle=='y':\r\n-                    cowsay_fun=char_func\r\n-                    cowsay_fun(\"设置成功\")\r\n-                    break\r\n-                elif middle=='n':\r\n-                    list_fun.append(list_fun.pop(0))\r\n-                elif middle=='u':\r\n-                    list_fun.insert(0,list_fun.pop(-1))\r\n-                elif middle=='E':\r\n-                    break\r\n-                elif middle=='A' or middle=='a':\r\n-                    for j in range(len(list_fun_copy)):\r\n-                       char,char_func= list_fun_copy[j]\r\n-                       char_func(f'Hi! I am {char},id is {j}')\r\n-                else:\r\n-                    try:\r\n-                        middle = int(middle)\r\n-                        if(middle<len(list_fun_copy) and middle>=0):\r\n-                            cowsay_fun=list_fun_copy[middle][1]\r\n-                            cowsay_fun(\"设置成功\")\r\n-                            break\r\n-                        else:\r\n-                            myPrint_Err(\"无效的命令\")\r\n-                    except Exception as e:\r\n-                        myPrint_Err(\"设置失败\")\r\n-        try:\r\n-            socket.send(command.encode())\r\n-        except Exception as e:\r\n-            if str(e).endswith(\"远程主机强迫关闭了一个现有的连接。\"):\r\n-                #重连机制\r\n-                SocketClient().connect(_run)\r\n-                return\r\n-\r\n-        while 1:\r\n-            data = socket.recv(1024).decode('utf-8','ignore')\r\n-            code=0\r\n-            if data == \"\":\r\n-                time.sleep(0.5)\r\n-                continue\r\n-\r\n-            if data == Sever_Message_start:\r\n-                data,code = recv_blog(socket)\r\n-            if cowsay_fun==myPrint_Hint or command=='-h' or command=='who':\r\n-                for i in data.split('\\n'):\r\n-                    if animation_multiple>0:\r\n-                        time.sleep(animation_multiple*animation)\r\n-                        myPrint_Hint(i)\r\n-            else:\r\n-                txt=data\r\n-                try:\r\n-                    cowsay_fun(txt)\r\n-                except Exception:\r\n-                    pass\r\n-            break\r\n-if __name__ == '__main__':\r\n-\r\n-    SocketClient().connect(_run)\r\n-# author:高金磊\r\n-# datetime:2022/6/22 10:08\r\n-import os\r\n-import sys\r\n-BASE_DIR = os.path.dirname(__file__)\r\n-for i in range(2):###距离项目根目录的距离____终端使用\r\n-    BASE_DIR=os.path.dirname(BASE_DIR)\r\n-    sys.path.append(BASE_DIR)\r\n-    print(BASE_DIR)\r\n-\r\n-#接后续代码\r\n-\r\n-import time\r\n-\r\n-import cowsay\r\n-from Socket_Tools.sockets import SocketClient, EXIT, Sever_Message_start, send_message, Sever_Message_confirm, recver_message, \\\r\n-    Sever_Message_end, recv_blog\r\n-from myPrint import *\r\n-\r\n-\r\n-def _run( socket):\r\n-    animation=0.02\r\n-    animation_multiple=1\r\n-    cowsay_fun=cowsay.dragon\r\n-    while 1:\r\n-        \r\n-        command = input('gjl:\\>：')\r\n-        if command == \"exit\":\r\n-            socket.send(EXIT.encode())\r\n-            socket.close()\r\n-            break\r\n-        elif command==\"\":\r\n-            continue\r\n-        elif command == \"setting show\":\r\n-            animation_multiple=input(\"请输入客户端动画效果（0--10）：\")\r\n-            try:\r\n-                if int(animation_multiple)>=0 and int(animation_multiple)<=10:\r\n-                    myPrint_Success(\"设置已经生效\")\r\n-                    animation_multiple = int(animation_multiple)\r\n-            except Exception:\r\n-                myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n-                animation_multiple=1\r\n-            continue\r\n-        elif command==\"setting cowsay\":\r\n-            list_fun=[[name,cowsay.char_funcs[name]] for name in cowsay.char_funcs.keys()]\r\n-            list_fun.append([\"紫色打印\",myPrint_Hint])\r\n-            \r\n-            list_fun_copy=copy(list_fun)\r\n-            while 1:\r\n-                char,char_func=list_fun[0]\r\n-                char_func(f'Hi! I am {char}')\r\n-                middle=input(\"使用这个输入y，查看下一个输入n,查看上一个输入u,退出用E,显示所有用A,或者输入你想使用的编号(0,%s):  \"%(len(list_fun)-1))\r\n-                if middle=='y':\r\n-                    cowsay_fun=char_func\r\n-                    cowsay_fun(\"设置成功\")\r\n-                    break\r\n-                elif middle=='n':\r\n-                    list_fun.append(list_fun.pop(0))\r\n-                elif middle=='u':\r\n-                    list_fun.insert(0,list_fun.pop(-1))\r\n-                elif middle=='E':\r\n-                    break\r\n-                elif middle=='A' or middle=='a':\r\n-                    for j in range(len(list_fun_copy)):\r\n-                       char,char_func= list_fun_copy[j]\r\n-                       char_func(f'Hi! I am {char},id is {j}')\r\n-                else:\r\n-                    try:\r\n-                        middle = int(middle)\r\n-                        if(middle<len(list_fun_copy) and middle>=0):\r\n-                            cowsay_fun=list_fun_copy[middle][1]\r\n-                            cowsay_fun(\"设置成功\")\r\n-                            break\r\n-                        else:\r\n-                            myPrint_Err(\"无效的命令\")\r\n-                    except Exception as e:\r\n-                        myPrint_Err(\"设置失败\")\r\n-        try:\r\n-            socket.send(command.encode())\r\n-        except Exception as e:\r\n-            if str(e).endswith(\"远程主机强迫关闭了一个现有的连接。\"):\r\n-                #重连机制\r\n-                SocketClient().connect(_run)\r\n-                return\r\n-\r\n-        while 1:\r\n-            data = socket.recv(1024).decode('utf-8','ignore')\r\n-            code=0\r\n-            if data == \"\":\r\n-                time.sleep(0.5)\r\n-                continue\r\n-\r\n-            if data == Sever_Message_start:\r\n-                data,code = recv_blog(socket)\r\n-            if cowsay_fun==myPrint_Hint or command=='-h' or command=='who':\r\n-                for i in data.split('\\n'):\r\n-                    if animation_multiple>0:\r\n-                        time.sleep(animation_multiple*animation)\r\n-                        myPrint_Hint(i)\r\n-            else:\r\n-                txt=data\r\n-                try:\r\n-                    cowsay_fun(txt)\r\n-                except Exception:\r\n-                    pass\r\n-            break\r\n-if __name__ == '__main__':\r\n-\r\n-    SocketClient().connect(_run)\r\n-# author:高金磊\r\n-# datetime:2022/6/22 10:08\r\n-import os\r\n-import sys\r\n-BASE_DIR = os.path.dirname(__file__)\r\n-for i in range(2):###距离项目根目录的距离____终端使用\r\n-    BASE_DIR=os.path.dirname(BASE_DIR)\r\n-    sys.path.append(BASE_DIR)\r\n-    print(BASE_DIR)\r\n-\r\n-#接后续代码\r\n-\r\n-import time\r\n-\r\n-import cowsay\r\n-from Socket_Tools.sockets import SocketClient, EXIT, Sever_Message_start, send_message, Sever_Message_confirm, recver_message, \\\r\n-    Sever_Message_end, recv_blog\r\n-from myPrint import *\r\n-\r\n-\r\n-def _run( socket):\r\n-    animation=0.02\r\n-    animation_multiple=1\r\n-    cowsay_fun=cowsay.dragon\r\n-    while 1:\r\n-        \r\n-        command = input('gjl:\\>：')\r\n-        if command == \"exit\":\r\n-            socket.send(EXIT.encode())\r\n-            socket.close()\r\n-            break\r\n-        elif command==\"\":\r\n-            continue\r\n-        elif command == \"setting show\":\r\n-            animation_multiple=input(\"请输入客户端动画效果（0--10）：\")\r\n-            try:\r\n-                if int(animation_multiple)>=0 and int(animation_multiple)<=10:\r\n-                    myPrint_Success(\"设置已经生效\")\r\n-                    animation_multiple = int(animation_multiple)\r\n-            except Exception:\r\n-                myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n-                animation_multiple=1\r\n-            continue\r\n-        elif command==\"setting cowsay\":\r\n-            list_fun=[[name,cowsay.char_funcs[name]] for name in cowsay.char_funcs.keys()]\r\n-            list_fun.append([\"紫色打印\",myPrint_Hint])\r\n-            \r\n-            list_fun_copy=copy(list_fun)\r\n-            while 1:\r\n-                char,char_func=list_fun[0]\r\n-                char_func(f'Hi! I am {char}')\r\n-                middle=input(\"使用这个输入y，查看下一个输入n,查看上一个输入u,退出用E,显示所有用A,或者输入你想使用的编号(0,%s):  \"%(len(list_fun)-1))\r\n-                if middle=='y':\r\n-                    cowsay_fun=char_func\r\n-                    cowsay_fun(\"设置成功\")\r\n-                    break\r\n-                elif middle=='n':\r\n-                    list_fun.append(list_fun.pop(0))\r\n-                elif middle=='u':\r\n-                    list_fun.insert(0,list_fun.pop(-1))\r\n-                elif middle=='E':\r\n-                    break\r\n-                elif middle=='A' or middle=='a':\r\n-                    for j in range(len(list_fun_copy)):\r\n-                       char,char_func= list_fun_copy[j]\r\n-                       char_func(f'Hi! I am {char},id is {j}')\r\n-                else:\r\n-                    try:\r\n-                        middle = int(middle)\r\n-                        if(middle<len(list_fun_copy) and middle>=0):\r\n-                            cowsay_fun=list_fun_copy[middle][1]\r\n-                            cowsay_fun(\"设置成功\")\r\n-                            break\r\n-                        else:\r\n-                            myPrint_Err(\"无效的命令\")\r\n-                    except Exception as e:\r\n-                        myPrint_Err(\"设置失败\")\r\n-        try:\r\n-            socket.send(command.encode())\r\n-        except Exception as e:\r\n-            if str(e).endswith(\"远程主机强迫关闭了一个现有的连接。\"):\r\n-                #重连机制\r\n-                SocketClient().connect(_run)\r\n-                return\r\n-\r\n-        while 1:\r\n-            data = socket.recv(1024).decode('utf-8','ignore')\r\n-            if data == \"\":\r\n-                time.sleep(0.5)\r\n-                continue\r\n-\r\n-            if data == Sever_Message_start:\r\n-                data = recv_blog(socket)\r\n-            if cowsay_fun==myPrint_Hint or command=='-h' or command=='who':\r\n-                for i in data.split('\\n'):\r\n-                    if animation_multiple>0:\r\n-                        time.sleep(animation_multiple*animation)\r\n-                        myPrint_Hint(i)\r\n-            else:\r\n-                txt=data\r\n-\r\n-                try:\r\n-                    cowsay_fun(txt)\r\n-                except Exception:\r\n-                    pass\r\n-            break\r\n-if __name__ == '__main__':\r\n-\r\n-    SocketClient().connect(_run)\r\n"
                },
                {
                    "date": 1697380250834,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,110 @@\n+# author:高金磊\r\n+# datetime:2022/6/22 10:08\r\n+import os\r\n+import sys\r\n+BASE_DIR = os.path.dirname(__file__)\r\n+for i in range(2):###距离项目根目录的距离____终端使用\r\n+    BASE_DIR=os.path.dirname(BASE_DIR)\r\n+    sys.path.append(BASE_DIR)\r\n+    print(BASE_DIR)\r\n+\r\n+#接后续代码\r\n+\r\n+import time\r\n+\r\n+import cowsay\r\n+from Shell_Tools.online_remote_shell.sockets import SocketClient, EXIT, Sever_Message_start, send_message, Sever_Message_confirm, recver_message, \\\r\n+    Sever_Message_end, recv_blog\r\n+from myPrint import *\r\n+\r\n+\r\n+def _run( socket):\r\n+    animation=0.02\r\n+    animation_multiple=1\r\n+    cowsay_fun=myPrint_Hint\r\n+    while 1:\r\n+        \r\n+        command = input('gjl:\\>：')\r\n+        if command == \"exit\":\r\n+            socket.send(EXIT.encode())\r\n+            time.sleep(1)\r\n+            socket.close()\r\n+            break\r\n+        elif command==\"\":\r\n+            continue\r\n+        elif command == \"setting show\":\r\n+            animation_multiple=input(\"请输入客户端动画效果（0--10）：\")\r\n+            try:\r\n+                if int(animation_multiple)>=0 and int(animation_multiple)<=10:\r\n+                    myPrint_Success(\"设置已经生效\")\r\n+                    animation_multiple = int(animation_multiple)\r\n+            except Exception:\r\n+                myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n+                animation_multiple=1\r\n+            continue\r\n+        elif command==\"setting cowsay\":\r\n+            list_fun=[[name,cowsay.char_funcs[name]] for name in cowsay.char_funcs.keys()]\r\n+            list_fun.append([\"紫色打印\",myPrint_Hint])\r\n+            \r\n+            list_fun_copy=copy(list_fun)\r\n+            while 1:\r\n+                char,char_func=list_fun[0]\r\n+                char_func(f'Hi! I am {char}')\r\n+                middle=input(\"使用这个输入y，查看下一个输入n,查看上一个输入u,退出用E,显示所有用A,或者输入你想使用的编号(0,%s):  \"%(len(list_fun)-1))\r\n+                if middle=='y':\r\n+                    cowsay_fun=char_func\r\n+                    cowsay_fun(\"设置成功\")\r\n+                    break\r\n+                elif middle=='n':\r\n+                    list_fun.append(list_fun.pop(0))\r\n+                elif middle=='u':\r\n+                    list_fun.insert(0,list_fun.pop(-1))\r\n+                elif middle=='E':\r\n+                    break\r\n+                elif middle=='A' or middle=='a':\r\n+                    for j in range(len(list_fun_copy)):\r\n+                       char,char_func= list_fun_copy[j]\r\n+                       char_func(f'Hi! I am {char},id is {j}')\r\n+                else:\r\n+                    try:\r\n+                        middle = int(middle)\r\n+                        if(middle<len(list_fun_copy) and middle>=0):\r\n+                            cowsay_fun=list_fun_copy[middle][1]\r\n+                            cowsay_fun(\"设置成功\")\r\n+                            break\r\n+                        else:\r\n+                            myPrint_Err(\"无效的命令\")\r\n+                    except Exception as e:\r\n+                        myPrint_Err(\"设置失败\")\r\n+        try:\r\n+            socket.send(command.encode())\r\n+        except Exception as e:\r\n+            if str(e).endswith(\"远程主机强迫关闭了一个现有的连接。\"):\r\n+                #重连机制\r\n+                SocketClient().connect(_run)\r\n+                return\r\n+\r\n+        while 1:\r\n+            data = socket.recv(1024).decode('utf-8','ignore')\r\n+            if data == \"\":\r\n+                time.sleep(0.5)\r\n+                continue\r\n+\r\n+            if data == Sever_Message_start:\r\n+                data = recv_blog(socket)\r\n+                \r\n+            if cowsay_fun==myPrint_Hint or command=='-h' or command=='who':\r\n+                for i in data.split('\\n'):\r\n+                    if animation_multiple>0:\r\n+                        time.sleep(animation_multiple*animation)\r\n+                        myPrint_Hint(i)\r\n+            else:\r\n+                txt=data\r\n+                try:\r\n+                    cowsay_fun(txt)\r\n+                except Exception:\r\n+                    pass\r\n+            break\r\n+if __name__ == '__main__':\r\n+\r\n+    SocketClient().connect(_run)\r\n"
                },
                {
                    "date": 1697381377780,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,112 @@\n+# author:高金磊\r\n+# datetime:2022/6/22 10:08\r\n+import os\r\n+import sys\r\n+\r\n+from Shell_Tools.online_remote_shell import Result\r\n+BASE_DIR = os.path.dirname(__file__)\r\n+for i in range(2):###距离项目根目录的距离____终端使用\r\n+    BASE_DIR=os.path.dirname(BASE_DIR)\r\n+    sys.path.append(BASE_DIR)\r\n+    print(BASE_DIR)\r\n+\r\n+#接后续代码\r\n+\r\n+import time\r\n+\r\n+import cowsay\r\n+from Shell_Tools.online_remote_shell.sockets import SocketClient, EXIT, Sever_Message_start, send_message, Sever_Message_confirm, recver_message, \\\r\n+    Sever_Message_end, recv_blog,recver_obj\r\n+from myPrint import *\r\n+\r\n+\r\n+def _run( socket):\r\n+    animation=0.02\r\n+    animation_multiple=1\r\n+    cowsay_fun=myPrint_Hint\r\n+    while 1:\r\n+        \r\n+        command = input('gjl:\\>：')\r\n+        if command == \"exit\":\r\n+            socket.send(EXIT.encode())\r\n+            time.sleep(1)\r\n+            socket.close()\r\n+            break\r\n+        elif command==\"\":\r\n+            continue\r\n+        elif command == \"setting show\":\r\n+            animation_multiple=input(\"请输入客户端动画效果（0--10）：\")\r\n+            try:\r\n+                if int(animation_multiple)>=0 and int(animation_multiple)<=10:\r\n+                    myPrint_Success(\"设置已经生效\")\r\n+                    animation_multiple = int(animation_multiple)\r\n+            except Exception:\r\n+                myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n+                animation_multiple=1\r\n+            continue\r\n+        elif command==\"setting cowsay\":\r\n+            list_fun=[[name,cowsay.char_funcs[name]] for name in cowsay.char_funcs.keys()]\r\n+            list_fun.append([\"紫色打印\",myPrint_Hint])\r\n+            \r\n+            list_fun_copy=copy(list_fun)\r\n+            while 1:\r\n+                char,char_func=list_fun[0]\r\n+                char_func(f'Hi! I am {char}')\r\n+                middle=input(\"使用这个输入y，查看下一个输入n,查看上一个输入u,退出用E,显示所有用A,或者输入你想使用的编号(0,%s):  \"%(len(list_fun)-1))\r\n+                if middle=='y':\r\n+                    cowsay_fun=char_func\r\n+                    cowsay_fun(\"设置成功\")\r\n+                    break\r\n+                elif middle=='n':\r\n+                    list_fun.append(list_fun.pop(0))\r\n+                elif middle=='u':\r\n+                    list_fun.insert(0,list_fun.pop(-1))\r\n+                elif middle=='E':\r\n+                    break\r\n+                elif middle=='A' or middle=='a':\r\n+                    for j in range(len(list_fun_copy)):\r\n+                       char,char_func= list_fun_copy[j]\r\n+                       char_func(f'Hi! I am {char},id is {j}')\r\n+                else:\r\n+                    try:\r\n+                        middle = int(middle)\r\n+                        if(middle<len(list_fun_copy) and middle>=0):\r\n+                            cowsay_fun=list_fun_copy[middle][1]\r\n+                            cowsay_fun(\"设置成功\")\r\n+                            break\r\n+                        else:\r\n+                            myPrint_Err(\"无效的命令\")\r\n+                    except Exception as e:\r\n+                        myPrint_Err(\"设置失败\")\r\n+        try:\r\n+            socket.send(command.encode())\r\n+        except Exception as e:\r\n+            if str(e).endswith(\"远程主机强迫关闭了一个现有的连接。\"):\r\n+                #重连机制\r\n+                SocketClient().connect(_run)\r\n+                return\r\n+\r\n+        while 1:\r\n+            data = socket.recv(1024).decode('utf-8','ignore')\r\n+            if data == \"\":\r\n+                time.sleep(0.5)\r\n+                continue\r\n+            res:Result =None\r\n+            if data == Sever_Message_start:\r\n+                res:Result = recver_obj(socket)\r\n+                \r\n+            if cowsay_fun==myPrint_Hint or command=='help' or command=='who':\r\n+                for i in res.Resultsplit('\\n'):\r\n+                    if animation_multiple>0:\r\n+                        time.sleep(animation_multiple*animation)\r\n+                        myPrint_Hint(i)\r\n+            else:\r\n+                txt=data\r\n+                try:\r\n+                    cowsay_fun(txt)\r\n+                except Exception:\r\n+                    pass\r\n+            break\r\n+if __name__ == '__main__':\r\n+\r\n+    SocketClient().connect(_run)\r\n"
                },
                {
                    "date": 1697381536427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n # datetime:2022/6/22 10:08\r\n import os\r\n import sys\r\n \r\n-from Shell_Tools.online_remote_shell import Result\r\n+from Shell_Tools.online_remote_shell.Result import Result\r\n BASE_DIR = os.path.dirname(__file__)\r\n for i in range(2):###距离项目根目录的距离____终端使用\r\n     BASE_DIR=os.path.dirname(BASE_DIR)\r\n     sys.path.append(BASE_DIR)\r\n@@ -94,123 +94,17 @@\n             res:Result =None\r\n             if data == Sever_Message_start:\r\n                 res:Result = recver_obj(socket)\r\n                 \r\n-            if cowsay_fun==myPrint_Hint or command=='help' or command=='who':\r\n-                for i in res.Resultsplit('\\n'):\r\n+            if res.err!=\"\" or cowsay_fun==myPrint_Hint or command=='help' or command=='who':\r\n+                for i in res.output.split('\\n'):\r\n                     if animation_multiple>0:\r\n                         time.sleep(animation_multiple*animation)\r\n                         myPrint_Hint(i)\r\n-            else:\r\n-                txt=data\r\n-                try:\r\n-                    cowsay_fun(txt)\r\n-                except Exception:\r\n-                    pass\r\n-            break\r\n-if __name__ == '__main__':\r\n-\r\n-    SocketClient().connect(_run)\r\n-# author:高金磊\r\n-# datetime:2022/6/22 10:08\r\n-import os\r\n-import sys\r\n-BASE_DIR = os.path.dirname(__file__)\r\n-for i in range(2):###距离项目根目录的距离____终端使用\r\n-    BASE_DIR=os.path.dirname(BASE_DIR)\r\n-    sys.path.append(BASE_DIR)\r\n-    print(BASE_DIR)\r\n-\r\n-#接后续代码\r\n-\r\n-import time\r\n-\r\n-import cowsay\r\n-from Shell_Tools.online_remote_shell.sockets import SocketClient, EXIT, Sever_Message_start, send_message, Sever_Message_confirm, recver_message, \\\r\n-    Sever_Message_end, recv_blog\r\n-from myPrint import *\r\n-\r\n-\r\n-def _run( socket):\r\n-    animation=0.02\r\n-    animation_multiple=1\r\n-    cowsay_fun=myPrint_Hint\r\n-    while 1:\r\n-        \r\n-        command = input('gjl:\\>：')\r\n-        if command == \"exit\":\r\n-            socket.send(EXIT.encode())\r\n-            time.sleep(1)\r\n-            socket.close()\r\n-            break\r\n-        elif command==\"\":\r\n-            continue\r\n-        elif command == \"setting show\":\r\n-            animation_multiple=input(\"请输入客户端动画效果（0--10）：\")\r\n-            try:\r\n-                if int(animation_multiple)>=0 and int(animation_multiple)<=10:\r\n-                    myPrint_Success(\"设置已经生效\")\r\n-                    animation_multiple = int(animation_multiple)\r\n-            except Exception:\r\n-                myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n-                animation_multiple=1\r\n-            continue\r\n-        elif command==\"setting cowsay\":\r\n-            list_fun=[[name,cowsay.char_funcs[name]] for name in cowsay.char_funcs.keys()]\r\n-            list_fun.append([\"紫色打印\",myPrint_Hint])\r\n-            \r\n-            list_fun_copy=copy(list_fun)\r\n-            while 1:\r\n-                char,char_func=list_fun[0]\r\n-                char_func(f'Hi! I am {char}')\r\n-                middle=input(\"使用这个输入y，查看下一个输入n,查看上一个输入u,退出用E,显示所有用A,或者输入你想使用的编号(0,%s):  \"%(len(list_fun)-1))\r\n-                if middle=='y':\r\n-                    cowsay_fun=char_func\r\n-                    cowsay_fun(\"设置成功\")\r\n-                    break\r\n-                elif middle=='n':\r\n-                    list_fun.append(list_fun.pop(0))\r\n-                elif middle=='u':\r\n-                    list_fun.insert(0,list_fun.pop(-1))\r\n-                elif middle=='E':\r\n-                    break\r\n-                elif middle=='A' or middle=='a':\r\n-                    for j in range(len(list_fun_copy)):\r\n-                       char,char_func= list_fun_copy[j]\r\n-                       char_func(f'Hi! I am {char},id is {j}')\r\n-                else:\r\n-                    try:\r\n-                        middle = int(middle)\r\n-                        if(middle<len(list_fun_copy) and middle>=0):\r\n-                            cowsay_fun=list_fun_copy[middle][1]\r\n-                            cowsay_fun(\"设置成功\")\r\n-                            break\r\n-                        else:\r\n-                            myPrint_Err(\"无效的命令\")\r\n-                    except Exception as e:\r\n-                        myPrint_Err(\"设置失败\")\r\n-        try:\r\n-            socket.send(command.encode())\r\n-        except Exception as e:\r\n-            if str(e).endswith(\"远程主机强迫关闭了一个现有的连接。\"):\r\n-                #重连机制\r\n-                SocketClient().connect(_run)\r\n-                return\r\n-\r\n-        while 1:\r\n-            data = socket.recv(1024).decode('utf-8','ignore')\r\n-            if data == \"\":\r\n-                time.sleep(0.5)\r\n-                continue\r\n-\r\n-            if data == Sever_Message_start:\r\n-                data = recv_blog(socket)\r\n-                \r\n-            if cowsay_fun==myPrint_Hint or command=='-h' or command=='who':\r\n-                for i in data.split('\\n'):\r\n+                for i in res.err.split('\\n'):\r\n                     if animation_multiple>0:\r\n                         time.sleep(animation_multiple*animation)\r\n-                        myPrint_Hint(i)\r\n+                        myPrint_Err(i)\r\n             else:\r\n                 txt=data\r\n                 try:\r\n                     cowsay_fun(txt)\r\n@@ -219,115 +113,4 @@\n             break\r\n if __name__ == '__main__':\r\n \r\n     SocketClient().connect(_run)\r\n-# author:高金磊\r\n-# datetime:2022/6/22 10:08\r\n-import os\r\n-import sys\r\n-BASE_DIR = os.path.dirname(__file__)\r\n-for i in range(2):###距离项目根目录的距离____终端使用\r\n-    BASE_DIR=os.path.dirname(BASE_DIR)\r\n-    sys.path.append(BASE_DIR)\r\n-    print(BASE_DIR)\r\n-\r\n-#接后续代码\r\n-\r\n-import time\r\n-\r\n-import cowsay\r\n-from Shell_Tools.online_remote_shell.sockets import SocketClient, EXIT, Sever_Message_start, send_message, Sever_Message_confirm, recver_message, \\\r\n-    Sever_Message_end, recv_blog\r\n-from myPrint import *\r\n-\r\n-\r\n-def _run( socket):\r\n-    animation=0.02\r\n-    animation_multiple=1\r\n-    cowsay_fun=myPrint_Hint\r\n-    while 1:\r\n-        \r\n-        command = input('gjl:\\>：')\r\n-        if command == \"exit\":\r\n-            socket.send(EXIT.encode())\r\n-            socket.close()\r\n-            break\r\n-        elif command==\"\":\r\n-            continue\r\n-        elif command == \"setting show\":\r\n-            animation_multiple=input(\"请输入客户端动画效果（0--10）：\")\r\n-            try:\r\n-                if int(animation_multiple)>=0 and int(animation_multiple)<=10:\r\n-                    myPrint_Success(\"设置已经生效\")\r\n-                    animation_multiple = int(animation_multiple)\r\n-            except Exception:\r\n-                myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n-                animation_multiple=1\r\n-            continue\r\n-        elif command==\"setting cowsay\":\r\n-            list_fun=[[name,cowsay.char_funcs[name]] for name in cowsay.char_funcs.keys()]\r\n-            list_fun.append([\"紫色打印\",myPrint_Hint])\r\n-            \r\n-            list_fun_copy=copy(list_fun)\r\n-            while 1:\r\n-                char,char_func=list_fun[0]\r\n-                char_func(f'Hi! I am {char}')\r\n-                middle=input(\"使用这个输入y，查看下一个输入n,查看上一个输入u,退出用E,显示所有用A,或者输入你想使用的编号(0,%s):  \"%(len(list_fun)-1))\r\n-                if middle=='y':\r\n-                    cowsay_fun=char_func\r\n-                    cowsay_fun(\"设置成功\")\r\n-                    break\r\n-                elif middle=='n':\r\n-                    list_fun.append(list_fun.pop(0))\r\n-                elif middle=='u':\r\n-                    list_fun.insert(0,list_fun.pop(-1))\r\n-                elif middle=='E':\r\n-                    break\r\n-                elif middle=='A' or middle=='a':\r\n-                    for j in range(len(list_fun_copy)):\r\n-                       char,char_func= list_fun_copy[j]\r\n-                       char_func(f'Hi! I am {char},id is {j}')\r\n-                else:\r\n-                    try:\r\n-                        middle = int(middle)\r\n-                        if(middle<len(list_fun_copy) and middle>=0):\r\n-                            cowsay_fun=list_fun_copy[middle][1]\r\n-                            cowsay_fun(\"设置成功\")\r\n-                            break\r\n-                        else:\r\n-                            myPrint_Err(\"无效的命令\")\r\n-                    except Exception as e:\r\n-                        myPrint_Err(\"设置失败\")\r\n-        try:\r\n-            socket.send(command.encode())\r\n-        except Exception as e:\r\n-            if str(e).endswith(\"远程主机强迫关闭了一个现有的连接。\"):\r\n-                #重连机制\r\n-                SocketClient().connect(_run)\r\n-                return\r\n-\r\n-        while 1:\r\n-            data = socket.recv(1024).decode('utf-8','ignore')\r\n-            code=0\r\n-            if data == \"\":\r\n-                time.sleep(0.5)\r\n-                continue\r\n-\r\n-            if data == Sever_Message_start:\r\n-                data,code = recv_blog(socket)\r\n-                if code !=0:\r\n-                    myPrint_Err(\"执行失败\")\r\n-            if cowsay_fun==myPrint_Hint or command=='-h' or command=='who':\r\n-                for i in data.split('\\n'):\r\n-                    if animation_multiple>0:\r\n-                        time.sleep(animation_multiple*animation)\r\n-                        myPrint_Hint(i)\r\n-            else:\r\n-                txt=data\r\n-                try:\r\n-                    cowsay_fun(txt)\r\n-                except Exception:\r\n-                    pass\r\n-            break\r\n-if __name__ == '__main__':\r\n-\r\n-    SocketClient().connect(_run)\r\n"
                },
                {
                    "date": 1697381568422,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,117 @@\n+# author:高金磊\r\n+# datetime:2022/6/22 10:08\r\n+import os\r\n+import sys\r\n+\r\n+\r\n+BASE_DIR = os.path.dirname(__file__)\r\n+for i in range(2):###距离项目根目录的距离____终端使用\r\n+    BASE_DIR=os.path.dirname(BASE_DIR)\r\n+    sys.path.append(BASE_DIR)\r\n+    print(BASE_DIR)\r\n+\r\n+#接后续代码\r\n+\r\n+import time\r\n+\r\n+import cowsay\r\n+from Shell_Tools.online_remote_shell.sockets import SocketClient, EXIT, Sever_Message_start, send_message, Sever_Message_confirm, recver_message, \\\r\n+    Sever_Message_end, recv_blog,recver_obj\r\n+from Shell_Tools.online_remote_shell.Result import Result\r\n+from myPrint import *\r\n+\r\n+\r\n+def _run( socket):\r\n+    animation=0.02\r\n+    animation_multiple=1\r\n+    cowsay_fun=myPrint_Hint\r\n+    while 1:\r\n+        \r\n+        command = input('gjl:\\>：')\r\n+        if command == \"exit\":\r\n+            socket.send(EXIT.encode())\r\n+            time.sleep(1)\r\n+            socket.close()\r\n+            break\r\n+        elif command==\"\":\r\n+            continue\r\n+        elif command == \"setting show\":\r\n+            animation_multiple=input(\"请输入客户端动画效果（0--10）：\")\r\n+            try:\r\n+                if int(animation_multiple)>=0 and int(animation_multiple)<=10:\r\n+                    myPrint_Success(\"设置已经生效\")\r\n+                    animation_multiple = int(animation_multiple)\r\n+            except Exception:\r\n+                myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n+                animation_multiple=1\r\n+            continue\r\n+        elif command==\"setting cowsay\":\r\n+            list_fun=[[name,cowsay.char_funcs[name]] for name in cowsay.char_funcs.keys()]\r\n+            list_fun.append([\"紫色打印\",myPrint_Hint])\r\n+            \r\n+            list_fun_copy=copy(list_fun)\r\n+            while 1:\r\n+                char,char_func=list_fun[0]\r\n+                char_func(f'Hi! I am {char}')\r\n+                middle=input(\"使用这个输入y，查看下一个输入n,查看上一个输入u,退出用E,显示所有用A,或者输入你想使用的编号(0,%s):  \"%(len(list_fun)-1))\r\n+                if middle=='y':\r\n+                    cowsay_fun=char_func\r\n+                    cowsay_fun(\"设置成功\")\r\n+                    break\r\n+                elif middle=='n':\r\n+                    list_fun.append(list_fun.pop(0))\r\n+                elif middle=='u':\r\n+                    list_fun.insert(0,list_fun.pop(-1))\r\n+                elif middle=='E':\r\n+                    break\r\n+                elif middle=='A' or middle=='a':\r\n+                    for j in range(len(list_fun_copy)):\r\n+                       char,char_func= list_fun_copy[j]\r\n+                       char_func(f'Hi! I am {char},id is {j}')\r\n+                else:\r\n+                    try:\r\n+                        middle = int(middle)\r\n+                        if(middle<len(list_fun_copy) and middle>=0):\r\n+                            cowsay_fun=list_fun_copy[middle][1]\r\n+                            cowsay_fun(\"设置成功\")\r\n+                            break\r\n+                        else:\r\n+                            myPrint_Err(\"无效的命令\")\r\n+                    except Exception as e:\r\n+                        myPrint_Err(\"设置失败\")\r\n+        try:\r\n+            socket.send(command.encode())\r\n+        except Exception as e:\r\n+            if str(e).endswith(\"远程主机强迫关闭了一个现有的连接。\"):\r\n+                #重连机制\r\n+                SocketClient().connect(_run)\r\n+                return\r\n+\r\n+        while 1:\r\n+            data = socket.recv(1024).decode('utf-8','ignore')\r\n+            if data == \"\":\r\n+                time.sleep(0.5)\r\n+                continue\r\n+            res:Result =None\r\n+            if data == Sever_Message_start:\r\n+                res:Result = recver_obj(socket)\r\n+                \r\n+            if res.err!=\"\" or cowsay_fun==myPrint_Hint or command=='help' or command=='who':\r\n+                for i in res.output.split('\\n'):\r\n+                    if animation_multiple>0:\r\n+                        time.sleep(animation_multiple*animation)\r\n+                        myPrint_Hint(i)\r\n+                for i in res.err.split('\\n'):\r\n+                    if animation_multiple>0:\r\n+                        time.sleep(animation_multiple*animation)\r\n+                        myPrint_Err(i)\r\n+            else:\r\n+                txt=data\r\n+                try:\r\n+                    cowsay_fun(txt)\r\n+                except Exception:\r\n+                    pass\r\n+            break\r\n+if __name__ == '__main__':\r\n+\r\n+    SocketClient().connect(_run)\r\n"
                },
                {
                    "date": 1697381629739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,12 +14,12 @@\n \r\n import time\r\n \r\n import cowsay\r\n-from Shell_Tools.online_remote_shell.sockets import SocketClient, EXIT, Sever_Message_start, send_message, Sever_Message_confirm, recver_message, \\\r\n-    Sever_Message_end, recv_blog,recver_obj\r\n+from Shell_Tools.online_remote_shell.sockets import SocketClient,recver_obj\r\n from Shell_Tools.online_remote_shell.Result import Result\r\n from myPrint import *\r\n+from Data import *\r\n \r\n \r\n def _run( socket):\r\n     animation=0.02\r\n@@ -114,120 +114,4 @@\n             break\r\n if __name__ == '__main__':\r\n \r\n     SocketClient().connect(_run)\r\n-# author:高金磊\r\n-# datetime:2022/6/22 10:08\r\n-import os\r\n-import sys\r\n-\r\n-from Shell_Tools.online_remote_shell.Result import Result\r\n-BASE_DIR = os.path.dirname(__file__)\r\n-for i in range(2):###距离项目根目录的距离____终端使用\r\n-    BASE_DIR=os.path.dirname(BASE_DIR)\r\n-    sys.path.append(BASE_DIR)\r\n-    print(BASE_DIR)\r\n-\r\n-#接后续代码\r\n-\r\n-import time\r\n-\r\n-import cowsay\r\n-from Shell_Tools.online_remote_shell.sockets import SocketClient, EXIT, Sever_Message_start, send_message, Sever_Message_confirm, recver_message, \\\r\n-    Sever_Message_end, recv_blog,recver_obj\r\n-from myPrint import *\r\n-\r\n-\r\n-def _run( socket):\r\n-    animation=0.02\r\n-    animation_multiple=1\r\n-    cowsay_fun=myPrint_Hint\r\n-    while 1:\r\n-        \r\n-        command = input('gjl:\\>：')\r\n-        if command == \"exit\":\r\n-            socket.send(EXIT.encode())\r\n-            time.sleep(1)\r\n-            socket.close()\r\n-            break\r\n-        elif command==\"\":\r\n-            continue\r\n-        elif command == \"setting show\":\r\n-            animation_multiple=input(\"请输入客户端动画效果（0--10）：\")\r\n-            try:\r\n-                if int(animation_multiple)>=0 and int(animation_multiple)<=10:\r\n-                    myPrint_Success(\"设置已经生效\")\r\n-                    animation_multiple = int(animation_multiple)\r\n-            except Exception:\r\n-                myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n-                animation_multiple=1\r\n-            continue\r\n-        elif command==\"setting cowsay\":\r\n-            list_fun=[[name,cowsay.char_funcs[name]] for name in cowsay.char_funcs.keys()]\r\n-            list_fun.append([\"紫色打印\",myPrint_Hint])\r\n-            \r\n-            list_fun_copy=copy(list_fun)\r\n-            while 1:\r\n-                char,char_func=list_fun[0]\r\n-                char_func(f'Hi! I am {char}')\r\n-                middle=input(\"使用这个输入y，查看下一个输入n,查看上一个输入u,退出用E,显示所有用A,或者输入你想使用的编号(0,%s):  \"%(len(list_fun)-1))\r\n-                if middle=='y':\r\n-                    cowsay_fun=char_func\r\n-                    cowsay_fun(\"设置成功\")\r\n-                    break\r\n-                elif middle=='n':\r\n-                    list_fun.append(list_fun.pop(0))\r\n-                elif middle=='u':\r\n-                    list_fun.insert(0,list_fun.pop(-1))\r\n-                elif middle=='E':\r\n-                    break\r\n-                elif middle=='A' or middle=='a':\r\n-                    for j in range(len(list_fun_copy)):\r\n-                       char,char_func= list_fun_copy[j]\r\n-                       char_func(f'Hi! I am {char},id is {j}')\r\n-                else:\r\n-                    try:\r\n-                        middle = int(middle)\r\n-                        if(middle<len(list_fun_copy) and middle>=0):\r\n-                            cowsay_fun=list_fun_copy[middle][1]\r\n-                            cowsay_fun(\"设置成功\")\r\n-                            break\r\n-                        else:\r\n-                            myPrint_Err(\"无效的命令\")\r\n-                    except Exception as e:\r\n-                        myPrint_Err(\"设置失败\")\r\n-        try:\r\n-            socket.send(command.encode())\r\n-        except Exception as e:\r\n-            if str(e).endswith(\"远程主机强迫关闭了一个现有的连接。\"):\r\n-                #重连机制\r\n-                SocketClient().connect(_run)\r\n-                return\r\n-\r\n-        while 1:\r\n-            data = socket.recv(1024).decode('utf-8','ignore')\r\n-            if data == \"\":\r\n-                time.sleep(0.5)\r\n-                continue\r\n-            res:Result =None\r\n-            if data == Sever_Message_start:\r\n-                res:Result = recver_obj(socket)\r\n-                \r\n-            if res.err!=\"\" or cowsay_fun==myPrint_Hint or command=='help' or command=='who':\r\n-                for i in res.output.split('\\n'):\r\n-                    if animation_multiple>0:\r\n-                        time.sleep(animation_multiple*animation)\r\n-                        myPrint_Hint(i)\r\n-                for i in res.err.split('\\n'):\r\n-                    if animation_multiple>0:\r\n-                        time.sleep(animation_multiple*animation)\r\n-                        myPrint_Err(i)\r\n-            else:\r\n-                txt=data\r\n-                try:\r\n-                    cowsay_fun(txt)\r\n-                except Exception:\r\n-                    pass\r\n-            break\r\n-if __name__ == '__main__':\r\n-\r\n-    SocketClient().connect(_run)\r\n"
                },
                {
                    "date": 1697382116126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,117 @@\n+# author:高金磊\r\n+# datetime:2022/6/22 10:08\r\n+import os\r\n+import sys\r\n+\r\n+\r\n+BASE_DIR = os.path.dirname(__file__)\r\n+for i in range(2):###距离项目根目录的距离____终端使用\r\n+    BASE_DIR=os.path.dirname(BASE_DIR)\r\n+    sys.path.append(BASE_DIR)\r\n+    print(BASE_DIR)\r\n+\r\n+#接后续代码\r\n+\r\n+import time\r\n+\r\n+import cowsay\r\n+from Shell_Tools.online_remote_shell.sockets import SocketClient,recver_obj\r\n+from Shell_Tools.online_remote_shell.Result import Result\r\n+from myPrint import *\r\n+from Data import *\r\n+\r\n+\r\n+def _run( socket):\r\n+    animation=0.02\r\n+    animation_multiple=1\r\n+    cowsay_fun=myPrint_Hint\r\n+    while 1:\r\n+        \r\n+        command = input('gjl:\\>：')\r\n+        if command == \"exit\":\r\n+            socket.send(command.encode())\r\n+            time.sleep(1)\r\n+            socket.close()\r\n+            break\r\n+        elif command==\"\":\r\n+            continue\r\n+        elif command == \"setting show\":\r\n+            animation_multiple=input(\"请输入客户端动画效果（0--10）：\")\r\n+            try:\r\n+                if int(animation_multiple)>=0 and int(animation_multiple)<=10:\r\n+                    myPrint_Success(\"设置已经生效\")\r\n+                    animation_multiple = int(animation_multiple)\r\n+            except Exception:\r\n+                myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n+                animation_multiple=1\r\n+            continue\r\n+        elif command==\"setting cowsay\":\r\n+            list_fun=[[name,cowsay.char_funcs[name]] for name in cowsay.char_funcs.keys()]\r\n+            list_fun.append([\"紫色打印\",myPrint_Hint])\r\n+            \r\n+            list_fun_copy=copy(list_fun)\r\n+            while 1:\r\n+                char,char_func=list_fun[0]\r\n+                char_func(f'Hi! I am {char}')\r\n+                middle=input(\"使用这个输入y，查看下一个输入n,查看上一个输入u,退出用E,显示所有用A,或者输入你想使用的编号(0,%s):  \"%(len(list_fun)-1))\r\n+                if middle=='y':\r\n+                    cowsay_fun=char_func\r\n+                    cowsay_fun(\"设置成功\")\r\n+                    break\r\n+                elif middle=='n':\r\n+                    list_fun.append(list_fun.pop(0))\r\n+                elif middle=='u':\r\n+                    list_fun.insert(0,list_fun.pop(-1))\r\n+                elif middle=='E':\r\n+                    break\r\n+                elif middle=='A' or middle=='a':\r\n+                    for j in range(len(list_fun_copy)):\r\n+                       char,char_func= list_fun_copy[j]\r\n+                       char_func(f'Hi! I am {char},id is {j}')\r\n+                else:\r\n+                    try:\r\n+                        middle = int(middle)\r\n+                        if(middle<len(list_fun_copy) and middle>=0):\r\n+                            cowsay_fun=list_fun_copy[middle][1]\r\n+                            cowsay_fun(\"设置成功\")\r\n+                            break\r\n+                        else:\r\n+                            myPrint_Err(\"无效的命令\")\r\n+                    except Exception as e:\r\n+                        myPrint_Err(\"设置失败\")\r\n+        try:\r\n+            socket.send(command.encode())\r\n+        except Exception as e:\r\n+            if str(e).endswith(\"远程主机强迫关闭了一个现有的连接。\"):\r\n+                #重连机制\r\n+                SocketClient().connect(_run)\r\n+                return\r\n+\r\n+        while 1:\r\n+            data = socket.recv(1024).decode('utf-8','ignore')\r\n+            if data == \"\":\r\n+                time.sleep(0.5)\r\n+                continue\r\n+            res:Result =None\r\n+            if data == Sever_Message_start:\r\n+                res:Result = recver_obj(socket)\r\n+                \r\n+            if res.err!=\"\" or cowsay_fun==myPrint_Hint or command=='help' or command=='who':\r\n+                for i in res.output.split('\\n'):\r\n+                    if animation_multiple>0:\r\n+                        time.sleep(animation_multiple*animation)\r\n+                        myPrint_Hint(i)\r\n+                for i in res.err.split('\\n'):\r\n+                    if animation_multiple>0:\r\n+                        time.sleep(animation_multiple*animation)\r\n+                        myPrint_Err(i)\r\n+            else:\r\n+                txt=data\r\n+                try:\r\n+                    cowsay_fun(txt)\r\n+                except Exception:\r\n+                    pass\r\n+            break\r\n+if __name__ == '__main__':\r\n+\r\n+    SocketClient().connect(_run)\r\n"
                },
                {
                    "date": 1697383004744,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,126 +91,9 @@\n             data = socket.recv(1024).decode('utf-8','ignore')\r\n             if data == \"\":\r\n                 time.sleep(0.5)\r\n                 continue\r\n-            res:Result =None\r\n-            if data == Sever_Message_start:\r\n-                res:Result = recver_obj(socket)\r\n-                \r\n-            if res.err!=\"\" or cowsay_fun==myPrint_Hint or command=='help' or command=='who':\r\n-                for i in res.output.split('\\n'):\r\n-                    if animation_multiple>0:\r\n-                        time.sleep(animation_multiple*animation)\r\n-                        myPrint_Hint(i)\r\n-                for i in res.err.split('\\n'):\r\n-                    if animation_multiple>0:\r\n-                        time.sleep(animation_multiple*animation)\r\n-                        myPrint_Err(i)\r\n-            else:\r\n-                txt=data\r\n-                try:\r\n-                    cowsay_fun(txt)\r\n-                except Exception:\r\n-                    pass\r\n-            break\r\n-if __name__ == '__main__':\r\n \r\n-    SocketClient().connect(_run)\r\n-# author:高金磊\r\n-# datetime:2022/6/22 10:08\r\n-import os\r\n-import sys\r\n-\r\n-\r\n-BASE_DIR = os.path.dirname(__file__)\r\n-for i in range(2):###距离项目根目录的距离____终端使用\r\n-    BASE_DIR=os.path.dirname(BASE_DIR)\r\n-    sys.path.append(BASE_DIR)\r\n-    print(BASE_DIR)\r\n-\r\n-#接后续代码\r\n-\r\n-import time\r\n-\r\n-import cowsay\r\n-from Shell_Tools.online_remote_shell.sockets import SocketClient,recver_obj\r\n-from Shell_Tools.online_remote_shell.Result import Result\r\n-from myPrint import *\r\n-from Data import *\r\n-\r\n-\r\n-def _run( socket):\r\n-    animation=0.02\r\n-    animation_multiple=1\r\n-    cowsay_fun=myPrint_Hint\r\n-    while 1:\r\n-        \r\n-        command = input('gjl:\\>：')\r\n-        if command == \"exit\":\r\n-            socket.send(EXIT.encode())\r\n-            time.sleep(1)\r\n-            socket.close()\r\n-            break\r\n-        elif command==\"\":\r\n-            continue\r\n-        elif command == \"setting show\":\r\n-            animation_multiple=input(\"请输入客户端动画效果（0--10）：\")\r\n-            try:\r\n-                if int(animation_multiple)>=0 and int(animation_multiple)<=10:\r\n-                    myPrint_Success(\"设置已经生效\")\r\n-                    animation_multiple = int(animation_multiple)\r\n-            except Exception:\r\n-                myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n-                animation_multiple=1\r\n-            continue\r\n-        elif command==\"setting cowsay\":\r\n-            list_fun=[[name,cowsay.char_funcs[name]] for name in cowsay.char_funcs.keys()]\r\n-            list_fun.append([\"紫色打印\",myPrint_Hint])\r\n-            \r\n-            list_fun_copy=copy(list_fun)\r\n-            while 1:\r\n-                char,char_func=list_fun[0]\r\n-                char_func(f'Hi! I am {char}')\r\n-                middle=input(\"使用这个输入y，查看下一个输入n,查看上一个输入u,退出用E,显示所有用A,或者输入你想使用的编号(0,%s):  \"%(len(list_fun)-1))\r\n-                if middle=='y':\r\n-                    cowsay_fun=char_func\r\n-                    cowsay_fun(\"设置成功\")\r\n-                    break\r\n-                elif middle=='n':\r\n-                    list_fun.append(list_fun.pop(0))\r\n-                elif middle=='u':\r\n-                    list_fun.insert(0,list_fun.pop(-1))\r\n-                elif middle=='E':\r\n-                    break\r\n-                elif middle=='A' or middle=='a':\r\n-                    for j in range(len(list_fun_copy)):\r\n-                       char,char_func= list_fun_copy[j]\r\n-                       char_func(f'Hi! I am {char},id is {j}')\r\n-                else:\r\n-                    try:\r\n-                        middle = int(middle)\r\n-                        if(middle<len(list_fun_copy) and middle>=0):\r\n-                            cowsay_fun=list_fun_copy[middle][1]\r\n-                            cowsay_fun(\"设置成功\")\r\n-                            break\r\n-                        else:\r\n-                            myPrint_Err(\"无效的命令\")\r\n-                    except Exception as e:\r\n-                        myPrint_Err(\"设置失败\")\r\n-        try:\r\n-            socket.send(command.encode())\r\n-        except Exception as e:\r\n-            if str(e).endswith(\"远程主机强迫关闭了一个现有的连接。\"):\r\n-                #重连机制\r\n-                SocketClient().connect(_run)\r\n-                return\r\n-\r\n-        while 1:\r\n-            data = socket.recv(1024).decode('utf-8','ignore')\r\n-            if data == \"\":\r\n-                time.sleep(0.5)\r\n-                continue\r\n-            res:Result =None\r\n             if data == Sever_Message_start:\r\n                 res:Result = recver_obj(socket)\r\n                 \r\n             if res.err!=\"\" or cowsay_fun==myPrint_Hint or command=='help' or command=='who':\r\n"
                },
                {
                    "date": 1697383043146,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,23 +95,23 @@\n \r\n             if data == Sever_Message_start:\r\n                 res:Result = recver_obj(socket)\r\n                 \r\n-            if res.err!=\"\" or cowsay_fun==myPrint_Hint or command=='help' or command=='who':\r\n-                for i in res.output.split('\\n'):\r\n-                    if animation_multiple>0:\r\n-                        time.sleep(animation_multiple*animation)\r\n-                        myPrint_Hint(i)\r\n-                for i in res.err.split('\\n'):\r\n-                    if animation_multiple>0:\r\n-                        time.sleep(animation_multiple*animation)\r\n-                        myPrint_Err(i)\r\n-            else:\r\n-                txt=data\r\n-                try:\r\n-                    cowsay_fun(txt)\r\n-                except Exception:\r\n-                    pass\r\n+                if res.err!=\"\" or cowsay_fun==myPrint_Hint or command=='help' or command=='who':\r\n+                    for i in res.output.split('\\n'):\r\n+                        if animation_multiple>0:\r\n+                            time.sleep(animation_multiple*animation)\r\n+                            myPrint_Hint(i)\r\n+                    for i in res.err.split('\\n'):\r\n+                        if animation_multiple>0:\r\n+                            time.sleep(animation_multiple*animation)\r\n+                            myPrint_Err(i)\r\n+                else:\r\n+                    txt=data\r\n+                    try:\r\n+                        cowsay_fun(txt)\r\n+                    except Exception:\r\n+                        pass\r\n             break\r\n if __name__ == '__main__':\r\n \r\n     SocketClient().connect(_run)\r\n"
                },
                {
                    "date": 1697383211227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,31 +87,25 @@\n                 SocketClient().connect(_run)\r\n                 return\r\n \r\n         while 1:\r\n-            data = socket.recv(1024).decode('utf-8','ignore')\r\n-            if data == \"\":\r\n-                time.sleep(0.5)\r\n-                continue\r\n \r\n-            if data == Sever_Message_start:\r\n-                res:Result = recver_obj(socket)\r\n-                \r\n-                if res.err!=\"\" or cowsay_fun==myPrint_Hint or command=='help' or command=='who':\r\n-                    for i in res.output.split('\\n'):\r\n-                        if animation_multiple>0:\r\n-                            time.sleep(animation_multiple*animation)\r\n-                            myPrint_Hint(i)\r\n-                    for i in res.err.split('\\n'):\r\n-                        if animation_multiple>0:\r\n-                            time.sleep(animation_multiple*animation)\r\n-                            myPrint_Err(i)\r\n-                else:\r\n-                    txt=data\r\n-                    try:\r\n-                        cowsay_fun(txt)\r\n-                    except Exception:\r\n-                        pass\r\n-            break\r\n+            res:Result = recver_obj(socket)\r\n+            \r\n+            if res.err!=\"\" or cowsay_fun==myPrint_Hint or command=='help' or command=='who':\r\n+                for i in res.output.split('\\n'):\r\n+                    if animation_multiple>0:\r\n+                        time.sleep(animation_multiple*animation)\r\n+                        myPrint_Hint(i)\r\n+                for i in res.err.split('\\n'):\r\n+                    if animation_multiple>0:\r\n+                        time.sleep(animation_multiple*animation)\r\n+                        myPrint_Err(i)\r\n+            else:\r\n+                txt=res.output\r\n+                try:\r\n+                    cowsay_fun(txt)\r\n+                except Exception:\r\n+                    pass\r\n if __name__ == '__main__':\r\n \r\n     SocketClient().connect(_run)\r\n"
                },
                {
                    "date": 1697383381446,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,110 @@\n+# author:高金磊\r\n+# datetime:2022/6/22 10:08\r\n+import os\r\n+import sys\r\n+\r\n+\r\n+BASE_DIR = os.path.dirname(__file__)\r\n+for i in range(2):###距离项目根目录的距离____终端使用\r\n+    BASE_DIR=os.path.dirname(BASE_DIR)\r\n+    sys.path.append(BASE_DIR)\r\n+    print(BASE_DIR)\r\n+\r\n+#接后续代码\r\n+\r\n+import time\r\n+\r\n+import cowsay\r\n+from Shell_Tools.online_remote_shell.sockets import SocketClient,recver_obj\r\n+from Shell_Tools.online_remote_shell.Result import Result\r\n+from myPrint import *\r\n+from Data import *\r\n+\r\n+\r\n+def _run( socket):\r\n+    animation=0.02\r\n+    animation_multiple=1\r\n+    cowsay_fun=myPrint_Hint\r\n+    while 1:\r\n+        \r\n+        command = input('gjl:\\>：')\r\n+        if command == \"exit\":\r\n+            socket.send(command.encode())\r\n+            time.sleep(1)\r\n+            socket.close()\r\n+            break\r\n+        elif command==\"\":\r\n+            continue\r\n+        elif command == \"setting show\":\r\n+            animation_multiple=input(\"请输入客户端动画效果（0--10）：\")\r\n+            try:\r\n+                if int(animation_multiple)>=0 and int(animation_multiple)<=10:\r\n+                    myPrint_Success(\"设置已经生效\")\r\n+                    animation_multiple = int(animation_multiple)\r\n+            except Exception:\r\n+                myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n+                animation_multiple=1\r\n+            continue\r\n+        elif command==\"setting cowsay\":\r\n+            list_fun=[[name,cowsay.char_funcs[name]] for name in cowsay.char_funcs.keys()]\r\n+            list_fun.append([\"紫色打印\",myPrint_Hint])\r\n+            \r\n+            list_fun_copy=copy(list_fun)\r\n+            while 1:\r\n+                char,char_func=list_fun[0]\r\n+                char_func(f'Hi! I am {char}')\r\n+                middle=input(\"使用这个输入y，查看下一个输入n,查看上一个输入u,退出用E,显示所有用A,或者输入你想使用的编号(0,%s):  \"%(len(list_fun)-1))\r\n+                if middle=='y':\r\n+                    cowsay_fun=char_func\r\n+                    cowsay_fun(\"设置成功\")\r\n+                    break\r\n+                elif middle=='n':\r\n+                    list_fun.append(list_fun.pop(0))\r\n+                elif middle=='u':\r\n+                    list_fun.insert(0,list_fun.pop(-1))\r\n+                elif middle=='E':\r\n+                    break\r\n+                elif middle=='A' or middle=='a':\r\n+                    for j in range(len(list_fun_copy)):\r\n+                       char,char_func= list_fun_copy[j]\r\n+                       char_func(f'Hi! I am {char},id is {j}')\r\n+                else:\r\n+                    try:\r\n+                        middle = int(middle)\r\n+                        if(middle<len(list_fun_copy) and middle>=0):\r\n+                            cowsay_fun=list_fun_copy[middle][1]\r\n+                            cowsay_fun(\"设置成功\")\r\n+                            break\r\n+                        else:\r\n+                            myPrint_Err(\"无效的命令\")\r\n+                    except Exception as e:\r\n+                        myPrint_Err(\"设置失败\")\r\n+        try:\r\n+            socket.send(command.encode())\r\n+        except Exception as e:\r\n+            if str(e).endswith(\"远程主机强迫关闭了一个现有的连接。\"):\r\n+                #重连机制\r\n+                SocketClient().connect(_run)\r\n+                return\r\n+\r\n+\r\n+        res:Result = recver_obj(socket)\r\n+        \r\n+        if res.err!=\"\" or cowsay_fun==myPrint_Hint or command=='help' or command=='who':\r\n+            for i in res.output.split('\\n'):\r\n+                if animation_multiple>0:\r\n+                    time.sleep(animation_multiple*animation)\r\n+                    myPrint_Hint(i)\r\n+            for i in res.err.split('\\n'):\r\n+                if animation_multiple>0:\r\n+                    time.sleep(animation_multiple*animation)\r\n+                    myPrint_Err(i)\r\n+        else:\r\n+            txt=res.output\r\n+            try:\r\n+                cowsay_fun(txt)\r\n+            except Exception:\r\n+                pass\r\n+if __name__ == '__main__':\r\n+\r\n+    SocketClient().connect(_run)\r\n"
                },
                {
                    "date": 1697425434229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n \r\n import time\r\n \r\n import cowsay\r\n-from Shell_Tools.online_remote_shell.sockets import SocketClient,recver_obj\r\n+from Shell_Tools.online_remote_shell.sockets import SocketClient,recver_obj, send_message\r\n from Shell_Tools.online_remote_shell.Result import Result\r\n from myPrint import *\r\n from Data import *\r\n \r\n@@ -28,9 +28,9 @@\n     while 1:\r\n         \r\n         command = input('gjl:\\>：')\r\n         if command == \"exit\":\r\n-            socket.send(command.encode())\r\n+            send_message(command)\r\n             time.sleep(1)\r\n             socket.close()\r\n             break\r\n         elif command==\"\":\r\n@@ -79,9 +79,9 @@\n                             myPrint_Err(\"无效的命令\")\r\n                     except Exception as e:\r\n                         myPrint_Err(\"设置失败\")\r\n         try:\r\n-            socket.send(command.encode())\r\n+            send_message(command)\r\n         except Exception as e:\r\n             if str(e).endswith(\"远程主机强迫关闭了一个现有的连接。\"):\r\n                 #重连机制\r\n                 SocketClient().connect(_run)\r\n@@ -107,115 +107,4 @@\n                 pass\r\n if __name__ == '__main__':\r\n \r\n     SocketClient().connect(_run)\r\n-# author:高金磊\r\n-# datetime:2022/6/22 10:08\r\n-import os\r\n-import sys\r\n-\r\n-\r\n-BASE_DIR = os.path.dirname(__file__)\r\n-for i in range(2):###距离项目根目录的距离____终端使用\r\n-    BASE_DIR=os.path.dirname(BASE_DIR)\r\n-    sys.path.append(BASE_DIR)\r\n-    print(BASE_DIR)\r\n-\r\n-#接后续代码\r\n-\r\n-import time\r\n-\r\n-import cowsay\r\n-from Shell_Tools.online_remote_shell.sockets import SocketClient,recver_obj\r\n-from Shell_Tools.online_remote_shell.Result import Result\r\n-from myPrint import *\r\n-from Data import *\r\n-\r\n-\r\n-def _run( socket):\r\n-    animation=0.02\r\n-    animation_multiple=1\r\n-    cowsay_fun=myPrint_Hint\r\n-    while 1:\r\n-        \r\n-        command = input('gjl:\\>：')\r\n-        if command == \"exit\":\r\n-            socket.send(command.encode())\r\n-            time.sleep(1)\r\n-            socket.close()\r\n-            break\r\n-        elif command==\"\":\r\n-            continue\r\n-        elif command == \"setting show\":\r\n-            animation_multiple=input(\"请输入客户端动画效果（0--10）：\")\r\n-            try:\r\n-                if int(animation_multiple)>=0 and int(animation_multiple)<=10:\r\n-                    myPrint_Success(\"设置已经生效\")\r\n-                    animation_multiple = int(animation_multiple)\r\n-            except Exception:\r\n-                myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n-                animation_multiple=1\r\n-            continue\r\n-        elif command==\"setting cowsay\":\r\n-            list_fun=[[name,cowsay.char_funcs[name]] for name in cowsay.char_funcs.keys()]\r\n-            list_fun.append([\"紫色打印\",myPrint_Hint])\r\n-            \r\n-            list_fun_copy=copy(list_fun)\r\n-            while 1:\r\n-                char,char_func=list_fun[0]\r\n-                char_func(f'Hi! I am {char}')\r\n-                middle=input(\"使用这个输入y，查看下一个输入n,查看上一个输入u,退出用E,显示所有用A,或者输入你想使用的编号(0,%s):  \"%(len(list_fun)-1))\r\n-                if middle=='y':\r\n-                    cowsay_fun=char_func\r\n-                    cowsay_fun(\"设置成功\")\r\n-                    break\r\n-                elif middle=='n':\r\n-                    list_fun.append(list_fun.pop(0))\r\n-                elif middle=='u':\r\n-                    list_fun.insert(0,list_fun.pop(-1))\r\n-                elif middle=='E':\r\n-                    break\r\n-                elif middle=='A' or middle=='a':\r\n-                    for j in range(len(list_fun_copy)):\r\n-                       char,char_func= list_fun_copy[j]\r\n-                       char_func(f'Hi! I am {char},id is {j}')\r\n-                else:\r\n-                    try:\r\n-                        middle = int(middle)\r\n-                        if(middle<len(list_fun_copy) and middle>=0):\r\n-                            cowsay_fun=list_fun_copy[middle][1]\r\n-                            cowsay_fun(\"设置成功\")\r\n-                            break\r\n-                        else:\r\n-                            myPrint_Err(\"无效的命令\")\r\n-                    except Exception as e:\r\n-                        myPrint_Err(\"设置失败\")\r\n-        try:\r\n-            socket.send(command.encode())\r\n-        except Exception as e:\r\n-            if str(e).endswith(\"远程主机强迫关闭了一个现有的连接。\"):\r\n-                #重连机制\r\n-                SocketClient().connect(_run)\r\n-                return\r\n-\r\n-        while 1:\r\n-\r\n-            res:Result = recver_obj(socket)\r\n-            \r\n-            if res.err!=\"\" or cowsay_fun==myPrint_Hint or command=='help' or command=='who':\r\n-                for i in res.output.split('\\n'):\r\n-                    if animation_multiple>0:\r\n-                        time.sleep(animation_multiple*animation)\r\n-                        myPrint_Hint(i)\r\n-                for i in res.err.split('\\n'):\r\n-                    if animation_multiple>0:\r\n-                        time.sleep(animation_multiple*animation)\r\n-                        myPrint_Err(i)\r\n-            else:\r\n-                txt=res.output\r\n-                try:\r\n-                    cowsay_fun(txt)\r\n-                except Exception:\r\n-                    pass\r\n-if __name__ == '__main__':\r\n-\r\n-    SocketClient().connect(_run)\r\n"
                },
                {
                    "date": 1697425582680,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n     while 1:\r\n         \r\n         command = input('gjl:\\>：')\r\n         if command == \"exit\":\r\n-            send_message(command)\r\n+            send_message(socket,command)\r\n             time.sleep(1)\r\n             socket.close()\r\n             break\r\n         elif command==\"\":\r\n@@ -79,9 +79,9 @@\n                             myPrint_Err(\"无效的命令\")\r\n                     except Exception as e:\r\n                         myPrint_Err(\"设置失败\")\r\n         try:\r\n-            send_message(command)\r\n+            send_message(socket,command)\r\n         except Exception as e:\r\n             if str(e).endswith(\"远程主机强迫关闭了一个现有的连接。\"):\r\n                 #重连机制\r\n                 SocketClient().connect(_run)\r\n"
                },
                {
                    "date": 1697447725059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,16 +18,15 @@\n from Shell_Tools.online_remote_shell.sockets import SocketClient,recver_obj, send_message\r\n from Shell_Tools.online_remote_shell.Result import Result\r\n from myPrint import *\r\n from Data import *\r\n+cwd=None\r\n \r\n-\r\n def _run( socket):\r\n     animation=0.02\r\n     animation_multiple=1\r\n     cowsay_fun=myPrint_Hint\r\n     while 1:\r\n-        \r\n         command = input('gjl:\\>：')\r\n         if command == \"exit\":\r\n             send_message(socket,command)\r\n             time.sleep(1)\r\n"
                },
                {
                    "date": 1697448671971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,66 +19,16 @@\n from Shell_Tools.online_remote_shell.Result import Result\r\n from myPrint import *\r\n from Data import *\r\n cwd=None\r\n-\r\n+def \r\n def _run( socket):\r\n     animation=0.02\r\n     animation_multiple=1\r\n     cowsay_fun=myPrint_Hint\r\n     while 1:\r\n         command = input('gjl:\\>：')\r\n-        if command == \"exit\":\r\n-            send_message(socket,command)\r\n-            time.sleep(1)\r\n-            socket.close()\r\n-            break\r\n-        elif command==\"\":\r\n-            continue\r\n-        elif command == \"setting show\":\r\n-            animation_multiple=input(\"请输入客户端动画效果（0--10）：\")\r\n-            try:\r\n-                if int(animation_multiple)>=0 and int(animation_multiple)<=10:\r\n-                    myPrint_Success(\"设置已经生效\")\r\n-                    animation_multiple = int(animation_multiple)\r\n-            except Exception:\r\n-                myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n-                animation_multiple=1\r\n-            continue\r\n-        elif command==\"setting cowsay\":\r\n-            list_fun=[[name,cowsay.char_funcs[name]] for name in cowsay.char_funcs.keys()]\r\n-            list_fun.append([\"紫色打印\",myPrint_Hint])\r\n-            \r\n-            list_fun_copy=copy(list_fun)\r\n-            while 1:\r\n-                char,char_func=list_fun[0]\r\n-                char_func(f'Hi! I am {char}')\r\n-                middle=input(\"使用这个输入y，查看下一个输入n,查看上一个输入u,退出用E,显示所有用A,或者输入你想使用的编号(0,%s):  \"%(len(list_fun)-1))\r\n-                if middle=='y':\r\n-                    cowsay_fun=char_func\r\n-                    cowsay_fun(\"设置成功\")\r\n-                    break\r\n-                elif middle=='n':\r\n-                    list_fun.append(list_fun.pop(0))\r\n-                elif middle=='u':\r\n-                    list_fun.insert(0,list_fun.pop(-1))\r\n-                elif middle=='E':\r\n-                    break\r\n-                elif middle=='A' or middle=='a':\r\n-                    for j in range(len(list_fun_copy)):\r\n-                       char,char_func= list_fun_copy[j]\r\n-                       char_func(f'Hi! I am {char},id is {j}')\r\n-                else:\r\n-                    try:\r\n-                        middle = int(middle)\r\n-                        if(middle<len(list_fun_copy) and middle>=0):\r\n-                            cowsay_fun=list_fun_copy[middle][1]\r\n-                            cowsay_fun(\"设置成功\")\r\n-                            break\r\n-                        else:\r\n-                            myPrint_Err(\"无效的命令\")\r\n-                    except Exception as e:\r\n-                        myPrint_Err(\"设置失败\")\r\n+\r\n         try:\r\n             send_message(socket,command)\r\n         except Exception as e:\r\n             if str(e).endswith(\"远程主机强迫关闭了一个现有的连接。\"):\r\n"
                },
                {
                    "date": 1697448974659,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,18 +19,75 @@\n from Shell_Tools.online_remote_shell.Result import Result\r\n from myPrint import *\r\n from Data import *\r\n cwd=None\r\n-def client_\r\n+\r\n+def remote_command(command,sock):\r\n+    if command == \"exit\":\r\n+        send_message(sock,command)\r\n+        time.sleep(1)\r\n+        sock.close()\r\n+    else:\r\n+        send_message(sock,command)\r\n+\r\n+def client_command(command):\r\n+    if command==\"\":\r\n+        return False\r\n+    elif command == \"setting show\":\r\n+        animation_multiple=input(\"请输入客户端动画效果（0--10）：\")\r\n+        try:\r\n+            if int(animation_multiple)>=0 and int(animation_multiple)<=10:\r\n+                myPrint_Success(\"设置已经生效\")\r\n+                animation_multiple = int(animation_multiple)\r\n+        except Exception:\r\n+            myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n+            animation_multiple=1\r\n+        return False\r\n+    elif command==\"setting cowsay\":\r\n+        list_fun=[[name,cowsay.char_funcs[name]] for name in cowsay.char_funcs.keys()]\r\n+        list_fun.append([\"紫色打印\",myPrint_Hint])\r\n+        \r\n+        list_fun_copy=copy(list_fun)\r\n+        while 1:\r\n+            char,char_func=list_fun[0]\r\n+            char_func(f'Hi! I am {char}')\r\n+            middle=input(\"使用这个输入y，查看下一个输入n,查看上一个输入u,退出用E,显示所有用A,或者输入你想使用的编号(0,%s):  \"%(len(list_fun)-1))\r\n+            if middle=='y':\r\n+                cowsay_fun=char_func\r\n+                cowsay_fun(\"设置成功\")\r\n+                break\r\n+            elif middle=='n':\r\n+                list_fun.append(list_fun.pop(0))\r\n+            elif middle=='u':\r\n+                list_fun.insert(0,list_fun.pop(-1))\r\n+            elif middle=='E':\r\n+                break\r\n+            elif middle=='A' or middle=='a':\r\n+                for j in range(len(list_fun_copy)):\r\n+                    char,char_func= list_fun_copy[j]\r\n+                    char_func(f'Hi! I am {char},id is {j}')\r\n+            else:\r\n+                try:\r\n+                    middle = int(middle)\r\n+                    if(middle<len(list_fun_copy) and middle>=0):\r\n+                        cowsay_fun=list_fun_copy[middle][1]\r\n+                        cowsay_fun(\"设置成功\")\r\n+                        break\r\n+                    else:\r\n+                        myPrint_Err(\"无效的命令\")\r\n+                except Exception as e:\r\n+                    myPrint_Err(\"设置失败\")\r\n+        return False\r\n+    return True\r\n def _run( socket):\r\n     animation=0.02\r\n     animation_multiple=1\r\n     cowsay_fun=myPrint_Hint\r\n     while 1:\r\n         command = input('gjl:\\>：')\r\n \r\n         try:\r\n-            send_message(socket,command)\r\n+            \r\n         except Exception as e:\r\n             if str(e).endswith(\"远程主机强迫关闭了一个现有的连接。\"):\r\n                 #重连机制\r\n                 SocketClient().connect(_run)\r\n"
                },
                {
                    "date": 1697449715198,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,118 @@\n+# author:高金磊\r\n+# datetime:2022/6/22 10:08\r\n+import os\r\n+import sys\r\n+\r\n+\r\n+BASE_DIR = os.path.dirname(__file__)\r\n+for i in range(2):###距离项目根目录的距离____终端使用\r\n+    BASE_DIR=os.path.dirname(BASE_DIR)\r\n+    sys.path.append(BASE_DIR)\r\n+    print(BASE_DIR)\r\n+\r\n+#接后续代码\r\n+\r\n+import time\r\n+\r\n+import cowsay\r\n+from Shell_Tools.online_remote_shell.sockets import SocketClient,recver_obj, send_message\r\n+from Shell_Tools.online_remote_shell.Result import Result\r\n+from myPrint import *\r\n+from Data import *\r\n+cwd=None\r\n+animation=0.02\r\n+animation_multiple=1\r\n+cowsay_fun=myPrint_Hint\r\n+def remote_command(command,sock):\r\n+    global cwd,animation,animation_multiple,cowsay_fun\r\n+    if command == \"exit\":\r\n+        send_message(sock,command)\r\n+        time.sleep(1)\r\n+        sock.close()\r\n+    else:\r\n+        send_message(sock,command)\r\n+\r\n+def client_command(command):\r\n+    global cwd,animation,animation_multiple,cowsay_fun\r\n+    if command==\"\":\r\n+        return False\r\n+    elif command == \"setting show\":\r\n+        animation_multiple=input(\"请输入客户端动画效果（0--10）：\")\r\n+        try:\r\n+            if int(animation_multiple)>=0 and int(animation_multiple)<=10:\r\n+                myPrint_Success(\"设置已经生效\")\r\n+                animation_multiple = int(animation_multiple)\r\n+        except Exception:\r\n+            myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n+            animation_multiple=1\r\n+        return False\r\n+    elif command==\"setting cowsay\":\r\n+        list_fun=[[name,cowsay.char_funcs[name]] for name in cowsay.char_funcs.keys()]\r\n+        list_fun.append([\"紫色打印\",myPrint_Hint])\r\n+        \r\n+        list_fun_copy=copy(list_fun)\r\n+        while 1:\r\n+            char,char_func=list_fun[0]\r\n+            char_func(f'Hi! I am {char}')\r\n+            middle=input(\"使用这个输入y，查看下一个输入n,查看上一个输入u,退出用E,显示所有用A,或者输入你想使用的编号(0,%s):  \"%(len(list_fun)-1))\r\n+            if middle=='y':\r\n+                cowsay_fun=char_func\r\n+                cowsay_fun(\"设置成功\")\r\n+                break\r\n+            elif middle=='n':\r\n+                list_fun.append(list_fun.pop(0))\r\n+            elif middle=='u':\r\n+                list_fun.insert(0,list_fun.pop(-1))\r\n+            elif middle=='E':\r\n+                break\r\n+            elif middle=='A' or middle=='a':\r\n+                for j in range(len(list_fun_copy)):\r\n+                    char,char_func= list_fun_copy[j]\r\n+                    char_func(f'Hi! I am {char},id is {j}')\r\n+            else:\r\n+                try:\r\n+                    middle = int(middle)\r\n+                    if(middle<len(list_fun_copy) and middle>=0):\r\n+                        cowsay_fun=list_fun_copy[middle][1]\r\n+                        cowsay_fun(\"设置成功\")\r\n+                        break\r\n+                    else:\r\n+                        myPrint_Err(\"无效的命令\")\r\n+                except Exception as e:\r\n+                    myPrint_Err(\"设置失败\")\r\n+        return False\r\n+    return True\r\n+def _run( socket):\r\n+    while 1:\r\n+        if cwd is None:\r\n+            command=Data().pwd_cd()\r\n+        command = input('gjl:\\>：')\r\n+        try:\r\n+            \r\n+        except Exception as e:\r\n+            if str(e).endswith(\"远程主机强迫关闭了一个现有的连接。\"):\r\n+                #重连机制\r\n+                SocketClient().connect(_run)\r\n+                return\r\n+\r\n+\r\n+        res:Result = recver_obj(socket)\r\n+        \r\n+        if res.err!=\"\" or cowsay_fun==myPrint_Hint or command=='help' or command=='who':\r\n+            for i in res.output.split('\\n'):\r\n+                if animation_multiple>0:\r\n+                    time.sleep(animation_multiple*animation)\r\n+                    myPrint_Hint(i)\r\n+            for i in res.err.split('\\n'):\r\n+                if animation_multiple>0:\r\n+                    time.sleep(animation_multiple*animation)\r\n+                    myPrint_Err(i)\r\n+        else:\r\n+            txt=res.output\r\n+            try:\r\n+                cowsay_fun(txt)\r\n+            except Exception:\r\n+                pass\r\n+if __name__ == '__main__':\r\n+\r\n+    SocketClient().connect(_run)\r\n"
                }
            ],
            "date": 1697270970953,
            "name": "Commit-0",
            "content": "# author:高金磊\r\n# datetime:2022/6/22 10:08\r\nimport os\r\nimport sys\r\nBASE_DIR = os.path.dirname(__file__)\r\nfor i in range(3):###距离项目根目录的距离____终端使用\r\n    BASE_DIR=os.path.dirname(BASE_DIR)\r\nsys.path.append(BASE_DIR)\r\n\r\n#接后续代码\r\n\r\nimport time\r\n\r\nimport cowsay\r\n\r\nfrom Socket_Tools.sockets import SocketClient, EXIT, Sever_Message_start, send_message, Sever_Message_confirm, recver_message, \\\r\n    Sever_Message_end, recv_blog\r\nfrom myPrint import *\r\n\r\n\r\ndef _run( socket):\r\n    animation=0.02\r\n    animation_multiple=1\r\n    cowsay_fun=cowsay.dragon\r\n    while 1:\r\n        command = input('gjl:\\>：')\r\n        if command == \"exit\":\r\n            socket.send(EXIT.encode())\r\n            socket.close()\r\n            break\r\n        elif command == \"setting show\":\r\n            animation_multiple=input(\"请输入客户端动画效果（0--10）：\")\r\n            try:\r\n                if int(animation_multiple)>=0 and int(animation_multiple)<=10:\r\n                    myPrint_Success(\"设置已经生效\")\r\n                    animation_multiple = int(animation_multiple)\r\n            except Exception:\r\n                myPrint_Err(\"设置失败，请输入0到10的整数\")\r\n                animation_multiple=1\r\n            continue\r\n        elif command==\"setting cowsay\":\r\n            list_fun=[[i,cowsay.chars[i]] for i in cowsay.chars.keys()]\r\n            list_fun.append([\"紫色打印\",myPrint_Hint])\r\n            while 1:\r\n                char,char_func=list_fun[0]\r\n                char_func(f'Hi! I am {char}')\r\n                middle=input(\"使用这个输入y，查看下一个输入n,查看上一个输入u,退出用E:  \")\r\n                if middle=='y':\r\n                    cowsay_fun=char_func\r\n                    cowsay_fun(\"设置成功\")\r\n                    break\r\n                elif middle=='n':\r\n                    list_fun.append(list_fun.pop(0))\r\n                elif middle=='u':\r\n                    list_fun.insert(0,list_fun.pop(-1))\r\n                elif middle=='E':\r\n                    break\r\n\r\n        try:\r\n            socket.send(command.encode())\r\n        except Exception as e:\r\n            if str(e).endswith(\"远程主机强迫关闭了一个现有的连接。\"):\r\n                #重连机制\r\n                SocketClient().connect(_run)\r\n                return\r\n\r\n        while 1:\r\n            data = socket.recv(1024).decode('utf-8','ignore')\r\n            if data == \"\":\r\n                time.sleep(0.5)\r\n                continue\r\n\r\n            if data == Sever_Message_start:\r\n                data = recv_blog(socket)\r\n            if cowsay_fun==myPrint_Hint or command=='-h' or command=='who':\r\n                for i in data.split('\\n'):\r\n                    if animation_multiple>0:\r\n                        time.sleep(animation_multiple*animation)\r\n                    myPrint_Hint(i)\r\n            else:\r\n                txt=data\r\n\r\n                try:\r\n                    cowsay_fun(txt)\r\n                except Exception:\r\n                    pass\r\n            break\r\nif __name__ == '__main__':\r\n\r\n    SocketClient().connect(_run)\r\n"
        }
    ]
}